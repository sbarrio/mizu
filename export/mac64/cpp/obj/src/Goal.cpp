// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Goal
#include <Goal.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2688a57d331192c6_14_new,"Goal","new",0xfb6c6ba5,"Goal.new","Goal.hx",14,0x0b758f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_2688a57d331192c6_26_update,"Goal","update",0x2c9b83e4,"Goal.update","Goal.hx",26,0x0b758f6b)
HX_LOCAL_STACK_FRAME(_hx_pos_2688a57d331192c6_31_destroy,"Goal","destroy",0x622e4ebf,"Goal.destroy","Goal.hx",31,0x0b758f6b)

void Goal_obj::__construct(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::String target){
Float X = __o_X.Default(((Float)0.0));
Float Y = __o_Y.Default(((Float)0.0));
            	HX_STACKFRAME(&_hx_pos_2688a57d331192c6_14_new)
HXLINE(  16)		super::__construct(X,Y,null());
HXLINE(  18)		this->makeGraphic((int)16,(int)32,(int)-8388480,null(),null());
HXLINE(  19)		this->set_alpha(((Float)0.6));
HXLINE(  20)		this->targetLevel = target;
            	}

Dynamic Goal_obj::__CreateEmpty() { return new Goal_obj; }

void *Goal_obj::_hx_vtable = 0;

Dynamic Goal_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Goal_obj > _hx_result = new Goal_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Goal_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x0b6ffd77) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x2f42b533;
	}
}

void Goal_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_2688a57d331192c6_26_update)
HXDLIN(  26)		this->super::update(elapsed);
            	}


void Goal_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_2688a57d331192c6_31_destroy)
HXDLIN(  31)		this->super::destroy();
            	}



hx::ObjectPtr< Goal_obj > Goal_obj::__new(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::String target) {
	hx::ObjectPtr< Goal_obj > __this = new Goal_obj();
	__this->__construct(__o_X,__o_Y,target);
	return __this;
}

hx::ObjectPtr< Goal_obj > Goal_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::String target) {
	Goal_obj *__this = (Goal_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Goal_obj), true, "Goal"));
	*(void **)__this = Goal_obj::_hx_vtable;
	__this->__construct(__o_X,__o_Y,target);
	return __this;
}

Goal_obj::Goal_obj()
{
}

void Goal_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Goal);
	HX_MARK_MEMBER_NAME(targetLevel,"targetLevel");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Goal_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(targetLevel,"targetLevel");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Goal_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"targetLevel") ) { return hx::Val( targetLevel ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Goal_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"targetLevel") ) { targetLevel=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Goal_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("targetLevel","\x73","\xec","\xba","\x02"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Goal_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(Goal_obj,targetLevel),HX_HCSTRING("targetLevel","\x73","\xec","\xba","\x02")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Goal_obj_sStaticStorageInfo = 0;
#endif

static ::String Goal_obj_sMemberFields[] = {
	HX_HCSTRING("targetLevel","\x73","\xec","\xba","\x02"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	::String(null()) };

static void Goal_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Goal_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Goal_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Goal_obj::__mClass,"__mClass");
};

#endif

hx::Class Goal_obj::__mClass;

void Goal_obj::__register()
{
	hx::Object *dummy = new Goal_obj;
	Goal_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Goal","\x33","\xb5","\x42","\x2f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Goal_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Goal_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Goal_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Goal_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Goal_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Goal_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

