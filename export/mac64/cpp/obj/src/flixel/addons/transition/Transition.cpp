// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_Transition
#include <flixel/addons/transition/Transition.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionData
#include <flixel/addons/transition/TransitionData.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionEffect
#include <flixel/addons/transition/TransitionEffect.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionFade
#include <flixel/addons/transition/TransitionFade.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionTiles
#include <flixel/addons/transition/TransitionTiles.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_30_new,"flixel.addons.transition.Transition","new",0xa22822f7,"flixel.addons.transition.Transition.new","flixel/addons/transition/Transition.hx",30,0x569ccdd8)
HX_LOCAL_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_38_update,"flixel.addons.transition.Transition","update",0x58ffabd2,"flixel.addons.transition.Transition.update","flixel/addons/transition/Transition.hx",38,0x569ccdd8)
HX_LOCAL_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_43_destroy,"flixel.addons.transition.Transition","destroy",0x0d6d1711,"flixel.addons.transition.Transition.destroy","flixel/addons/transition/Transition.hx",43,0x569ccdd8)
HX_LOCAL_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_52_start,"flixel.addons.transition.Transition","start",0x818adab9,"flixel.addons.transition.Transition.start","flixel/addons/transition/Transition.hx",52,0x569ccdd8)
HX_LOCAL_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_57_setStatus,"flixel.addons.transition.Transition","setStatus",0x85aa3a4b,"flixel.addons.transition.Transition.setStatus","flixel/addons/transition/Transition.hx",57,0x569ccdd8)
HX_LOCAL_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_62_createEffect,"flixel.addons.transition.Transition","createEffect",0x4cf6bd36,"flixel.addons.transition.Transition.createEffect","flixel/addons/transition/Transition.hx",62,0x569ccdd8)
HX_LOCAL_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_71_get_finishCallback,"flixel.addons.transition.Transition","get_finishCallback",0xc796b14a,"flixel.addons.transition.Transition.get_finishCallback","flixel/addons/transition/Transition.hx",71,0x569ccdd8)
HX_LOCAL_STACK_FRAME(_hx_pos_ab83fa44df0ac8ad_80_set_finishCallback,"flixel.addons.transition.Transition","set_finishCallback",0xa445e3be,"flixel.addons.transition.Transition.set_finishCallback","flixel/addons/transition/Transition.hx",80,0x569ccdd8)
namespace flixel{
namespace addons{
namespace transition{

void Transition_obj::__construct( ::flixel::addons::transition::TransitionData data){
            	HX_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_30_new)
HXLINE(  31)		super::__construct((int)0);
HXLINE(  32)		this->_effect = this->createEffect(data);
HXLINE(  33)		this->_effect->scrollFactor->set((int)0,(int)0);
HXLINE(  34)		this->add(this->_effect);
            	}

Dynamic Transition_obj::__CreateEmpty() { return new Transition_obj; }

void *Transition_obj::_hx_vtable = 0;

Dynamic Transition_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Transition_obj > _hx_result = new Transition_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Transition_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3634c52c) {
		if (inClassId<=(int)0x25a685e0) {
			if (inClassId<=(int)0x2335d9a7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x2335d9a7;
			} else {
				return inClassId==(int)0x25a685e0;
			}
		} else {
			return inClassId==(int)0x3634c52c;
		}
	} else {
		return inClassId==(int)0x6437acbd || inClassId==(int)0x7f681f43;
	}
}

void Transition_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_38_update)
HXLINE(  39)		this->super::update(elapsed);
HXLINE(  40)		this->_effect->update(elapsed);
            	}


void Transition_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_43_destroy)
HXLINE(  44)		this->super::destroy();
HXLINE(  45)		this->set_finishCallback(null());
HXLINE(  46)		this->_effect->destroy();
HXLINE(  47)		this->_effect = null();
            	}


void Transition_obj::start(int NewStatus){
            	HX_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_52_start)
HXDLIN(  52)		this->_effect->start(NewStatus);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Transition_obj,start,(void))

void Transition_obj::setStatus(int NewStatus){
            	HX_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_57_setStatus)
HXDLIN(  57)		this->_effect->setStatus(NewStatus);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Transition_obj,setStatus,(void))

 ::flixel::addons::transition::TransitionEffect Transition_obj::createEffect( ::flixel::addons::transition::TransitionData Data){
            	HX_GC_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_62_createEffect)
HXDLIN(  62)		::String _g = Data->type;
HXDLIN(  62)		::String _hx_switch_0 = _g;
            		if (  (_hx_switch_0==HX_("fade",7c,b5,b5,43)) ){
HXLINE(  65)			return  ::flixel::addons::transition::TransitionFade_obj::__alloc( HX_CTX ,Data);
HXDLIN(  65)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("tiles",85,fd,34,10)) ){
HXLINE(  64)			return  ::flixel::addons::transition::TransitionTiles_obj::__alloc( HX_CTX ,Data);
HXDLIN(  64)			goto _hx_goto_5;
            		}
            		/* default */{
HXLINE(  66)			return null();
            		}
            		_hx_goto_5:;
HXLINE(  62)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Transition_obj,createEffect,return )

 ::Dynamic Transition_obj::get_finishCallback(){
            	HX_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_71_get_finishCallback)
HXLINE(  72)		if (hx::IsNotNull( this->_effect )) {
HXLINE(  74)			return this->_effect->finishCallback;
            		}
HXLINE(  76)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Transition_obj,get_finishCallback,return )

 ::Dynamic Transition_obj::set_finishCallback( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_ab83fa44df0ac8ad_80_set_finishCallback)
HXLINE(  81)		if (hx::IsNotNull( this->_effect )) {
HXLINE(  83)			this->_effect->finishCallback = f;
HXLINE(  84)			return f;
            		}
HXLINE(  86)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Transition_obj,set_finishCallback,return )


hx::ObjectPtr< Transition_obj > Transition_obj::__new( ::flixel::addons::transition::TransitionData data) {
	hx::ObjectPtr< Transition_obj > __this = new Transition_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< Transition_obj > Transition_obj::__alloc(hx::Ctx *_hx_ctx, ::flixel::addons::transition::TransitionData data) {
	Transition_obj *__this = (Transition_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Transition_obj), true, "flixel.addons.transition.Transition"));
	*(void **)__this = Transition_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

Transition_obj::Transition_obj()
{
}

void Transition_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Transition);
	HX_MARK_MEMBER_NAME(_effect,"_effect");
	 ::flixel::FlxSubState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Transition_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_effect,"_effect");
	 ::flixel::FlxSubState_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Transition_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { return hx::Val( start_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_effect") ) { return hx::Val( _effect ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"setStatus") ) { return hx::Val( setStatus_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createEffect") ) { return hx::Val( createEffect_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"finishCallback") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_finishCallback() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_finishCallback") ) { return hx::Val( get_finishCallback_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_finishCallback") ) { return hx::Val( set_finishCallback_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Transition_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"_effect") ) { _effect=inValue.Cast<  ::flixel::addons::transition::TransitionEffect >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"finishCallback") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_finishCallback(inValue.Cast<  ::Dynamic >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Transition_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_effect","\x30","\x6c","\x1a","\xcf"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Transition_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::addons::transition::TransitionEffect*/ ,(int)offsetof(Transition_obj,_effect),HX_HCSTRING("_effect","\x30","\x6c","\x1a","\xcf")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Transition_obj_sStaticStorageInfo = 0;
#endif

static ::String Transition_obj_sMemberFields[] = {
	HX_HCSTRING("_effect","\x30","\x6c","\x1a","\xcf"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("start","\x62","\x74","\x0b","\x84"),
	HX_HCSTRING("setStatus","\x74","\x5c","\xa3","\x65"),
	HX_HCSTRING("createEffect","\xad","\x9a","\xf8","\x82"),
	HX_HCSTRING("get_finishCallback","\x01","\x82","\x56","\x50"),
	HX_HCSTRING("set_finishCallback","\x75","\xb4","\x05","\x2d"),
	::String(null()) };

static void Transition_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Transition_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Transition_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Transition_obj::__mClass,"__mClass");
};

#endif

hx::Class Transition_obj::__mClass;

void Transition_obj::__register()
{
	hx::Object *dummy = new Transition_obj;
	Transition_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.transition.Transition","\x85","\xdb","\x97","\x96");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Transition_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Transition_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Transition_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Transition_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Transition_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Transition_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace transition
