// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUI9SliceSprite
#include <flixel/addons/ui/FlxUI9SliceSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIDropDownHeader
#include <flixel/addons/ui/FlxUIDropDownHeader.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIGroup
#include <flixel/addons/ui/FlxUIGroup.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISprite
#include <flixel/addons/ui/FlxUISprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISpriteButton
#include <flixel/addons/ui/FlxUISpriteButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIText
#include <flixel/addons/ui/FlxUIText.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUITypedButton
#include <flixel/addons/ui/FlxUITypedButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_ICursorPointable
#include <flixel/addons/ui/interfaces/ICursorPointable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIButton
#include <flixel/addons/ui/interfaces/IFlxUIButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIClickable
#include <flixel/addons/ui/interfaces/IFlxUIClickable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIWidget
#include <flixel/addons/ui/interfaces/IFlxUIWidget.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IHasParams
#include <flixel/addons/ui/interfaces/IHasParams.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IResizable
#include <flixel/addons/ui/interfaces/IResizable.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton
#include <flixel/ui/FlxTypedButton.h>
#endif
#ifndef INCLUDED_flixel_util_FlxDestroyUtil
#include <flixel/util/FlxDestroyUtil.h>
#endif
#ifndef INCLUDED_flixel_util_FlxStringUtil
#include <flixel/util/FlxStringUtil.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Rectangle
#include <openfl/_legacy/geom/Rectangle.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_015f8e5857f13f23_459_new,"flixel.addons.ui.FlxUIDropDownHeader","new",0x97950645,"flixel.addons.ui.FlxUIDropDownHeader.new","flixel/addons/ui/FlxUIDropDownMenu.hx",459,0x238549da)
static const int _hx_array_data_73217fd3_1[] = {
	(int)1,(int)1,(int)14,(int)14,
};
HX_LOCAL_STACK_FRAME(_hx_pos_015f8e5857f13f23_500_destroy,"flixel.addons.ui.FlxUIDropDownHeader","destroy",0x07c8b95f,"flixel.addons.ui.FlxUIDropDownHeader.destroy","flixel/addons/ui/FlxUIDropDownMenu.hx",500,0x238549da)
namespace flixel{
namespace addons{
namespace ui{

void FlxUIDropDownHeader_obj::__construct(hx::Null< int >  __o_Width, ::flixel::FlxSprite Background, ::flixel::addons::ui::FlxUIText Text, ::flixel::addons::ui::FlxUISpriteButton Button){
int Width = __o_Width.Default(120);
            	HX_GC_STACKFRAME(&_hx_pos_015f8e5857f13f23_459_new)
HXLINE( 460)		super::__construct(null(),null());
HXLINE( 462)		this->background = Background;
HXLINE( 463)		this->text = Text;
HXLINE( 464)		this->button = Button;
HXLINE( 467)		if (hx::IsNull( this->background )) {
HXLINE( 468)			this->background =  ::flixel::addons::ui::FlxUI9SliceSprite_obj::__alloc( HX_CTX ,(int)0,(int)0,HX_("flixel/flixel-ui/img/box.png",dd,a4,cf,5b), ::openfl::_legacy::geom::Rectangle_obj::__alloc( HX_CTX ,(int)0,(int)0,Width,(int)20),::Array_obj< int >::fromData( _hx_array_data_73217fd3_1,4),null(),null(),null(),null(),null(),null(),null(),null());
            		}
HXLINE( 472)		if (hx::IsNull( this->button )) {
HXLINE( 473)			this->button =  ::flixel::addons::ui::FlxUISpriteButton_obj::__alloc( HX_CTX ,(int)0,(int)0, ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(int)0,(int)0,HX_("flixel/flixel-ui/img/dropdown_mark.png",cd,eb,34,3e)),null());
HXLINE( 474)			 ::flixel::addons::ui::FlxUISpriteButton _hx_tmp = this->button;
HXDLIN( 474)			_hx_tmp->loadGraphicSlice9(::cpp::VirtualArray_obj::__new(1)->init(0,HX_("flixel/flixel-ui/img/button_thin.png",58,62,55,9f)),(int)80,(int)20,::Array_obj< ::Dynamic>::__new(1)->init(0,::flixel::util::FlxStringUtil_obj::toIntArray(HX_("6,6,11,11",c0,1f,fa,07))),(int)0,(int)-1,false,(int)18,(int)18,null());
            		}
HXLINE( 478)		 ::flixel::addons::ui::FlxUISpriteButton _hx_tmp1 = this->button;
HXDLIN( 478)		Float _hx_tmp2 = this->background->get_height();
HXDLIN( 478)		_hx_tmp1->resize(_hx_tmp2,this->background->get_height());
HXLINE( 479)		 ::flixel::addons::ui::FlxUISpriteButton _hx_tmp3 = this->button;
HXDLIN( 479)		Float _hx_tmp4 = this->background->x;
HXDLIN( 479)		Float _hx_tmp5 = (_hx_tmp4 + this->background->get_width());
HXDLIN( 479)		_hx_tmp3->set_x((_hx_tmp5 - this->button->get_width()));
HXLINE( 482)		this->button->set_width(Width);
HXLINE( 483)		{
HXLINE( 483)			 ::flixel::math::FlxPoint _g = this->button->offset;
HXDLIN( 483)			Float _g1 = _g->x;
HXDLIN( 483)			_g->set_x((_g1 - (Width - this->button->frameWidth)));
            		}
HXLINE( 484)		this->button->set_x(this->offset->x);
HXLINE( 485)		{
HXLINE( 485)			 ::flixel::math::FlxPoint _g2 = ( ( ::flixel::FlxSprite)(this->button->label) )->offset;
HXDLIN( 485)			_g2->set_x((_g2->x + this->button->offset->x));
            		}
HXLINE( 488)		if (hx::IsNull( this->text )) {
HXLINE( 489)			this->text =  ::flixel::addons::ui::FlxUIText_obj::__alloc( HX_CTX ,(int)0,(int)0,::Std_obj::_hx_int(this->background->get_width()),null(),null(),null());
            		}
HXLINE( 491)		this->text->setPosition((int)2,(int)4);
HXLINE( 492)		this->text->set_color((int)-16777216);
HXLINE( 494)		this->add(this->background);
HXLINE( 495)		this->add(this->button);
HXLINE( 496)		this->add(this->text);
            	}

Dynamic FlxUIDropDownHeader_obj::__CreateEmpty() { return new FlxUIDropDownHeader_obj; }

void *FlxUIDropDownHeader_obj::_hx_vtable = 0;

Dynamic FlxUIDropDownHeader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxUIDropDownHeader_obj > _hx_result = new FlxUIDropDownHeader_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool FlxUIDropDownHeader_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x1627963d) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x1627963d;
			}
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		if (inClassId<=(int)0x282173df) {
			return inClassId==(int)0x263b73ac || inClassId==(int)0x282173df;
		} else {
			return inClassId==(int)0x2e105115;
		}
	}
}

void FlxUIDropDownHeader_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_015f8e5857f13f23_500_destroy)
HXLINE( 501)		this->super::destroy();
HXLINE( 503)		this->background = ( ( ::flixel::FlxSprite)(::flixel::util::FlxDestroyUtil_obj::destroy(this->background)) );
HXLINE( 504)		this->text = ( ( ::flixel::addons::ui::FlxUIText)(::flixel::util::FlxDestroyUtil_obj::destroy(this->text)) );
HXLINE( 505)		this->button = ( ( ::flixel::addons::ui::FlxUISpriteButton)(::flixel::util::FlxDestroyUtil_obj::destroy(this->button)) );
            	}



hx::ObjectPtr< FlxUIDropDownHeader_obj > FlxUIDropDownHeader_obj::__new(hx::Null< int >  __o_Width, ::flixel::FlxSprite Background, ::flixel::addons::ui::FlxUIText Text, ::flixel::addons::ui::FlxUISpriteButton Button) {
	hx::ObjectPtr< FlxUIDropDownHeader_obj > __this = new FlxUIDropDownHeader_obj();
	__this->__construct(__o_Width,Background,Text,Button);
	return __this;
}

hx::ObjectPtr< FlxUIDropDownHeader_obj > FlxUIDropDownHeader_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< int >  __o_Width, ::flixel::FlxSprite Background, ::flixel::addons::ui::FlxUIText Text, ::flixel::addons::ui::FlxUISpriteButton Button) {
	FlxUIDropDownHeader_obj *__this = (FlxUIDropDownHeader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxUIDropDownHeader_obj), true, "flixel.addons.ui.FlxUIDropDownHeader"));
	*(void **)__this = FlxUIDropDownHeader_obj::_hx_vtable;
	__this->__construct(__o_Width,Background,Text,Button);
	return __this;
}

FlxUIDropDownHeader_obj::FlxUIDropDownHeader_obj()
{
}

void FlxUIDropDownHeader_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxUIDropDownHeader);
	HX_MARK_MEMBER_NAME(background,"background");
	HX_MARK_MEMBER_NAME(text,"text");
	HX_MARK_MEMBER_NAME(button,"button");
	 ::flixel::addons::ui::FlxUIGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FlxUIDropDownHeader_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(background,"background");
	HX_VISIT_MEMBER_NAME(text,"text");
	HX_VISIT_MEMBER_NAME(button,"button");
	 ::flixel::addons::ui::FlxUIGroup_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FlxUIDropDownHeader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return hx::Val( text ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"button") ) { return hx::Val( button ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { return hx::Val( background ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxUIDropDownHeader_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast<  ::flixel::addons::ui::FlxUIText >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"button") ) { button=inValue.Cast<  ::flixel::addons::ui::FlxUISpriteButton >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { background=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxUIDropDownHeader_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("background","\xee","\x93","\x1d","\x26"));
	outFields->push(HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c"));
	outFields->push(HX_HCSTRING("button","\xf2","\x61","\xe0","\xd9"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxUIDropDownHeader_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FlxUIDropDownHeader_obj,background),HX_HCSTRING("background","\xee","\x93","\x1d","\x26")},
	{hx::fsObject /*::flixel::addons::ui::FlxUIText*/ ,(int)offsetof(FlxUIDropDownHeader_obj,text),HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c")},
	{hx::fsObject /*::flixel::addons::ui::FlxUISpriteButton*/ ,(int)offsetof(FlxUIDropDownHeader_obj,button),HX_HCSTRING("button","\xf2","\x61","\xe0","\xd9")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FlxUIDropDownHeader_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxUIDropDownHeader_obj_sMemberFields[] = {
	HX_HCSTRING("background","\xee","\x93","\x1d","\x26"),
	HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c"),
	HX_HCSTRING("button","\xf2","\x61","\xe0","\xd9"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	::String(null()) };

static void FlxUIDropDownHeader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxUIDropDownHeader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxUIDropDownHeader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxUIDropDownHeader_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxUIDropDownHeader_obj::__mClass;

void FlxUIDropDownHeader_obj::__register()
{
	hx::Object *dummy = new FlxUIDropDownHeader_obj;
	FlxUIDropDownHeader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.ui.FlxUIDropDownHeader","\xd3","\x7f","\x21","\x73");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxUIDropDownHeader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxUIDropDownHeader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxUIDropDownHeader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxUIDropDownHeader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxUIDropDownHeader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxUIDropDownHeader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace ui
