// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISpriteButton
#include <flixel/addons/ui/FlxUISpriteButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUITypedButton
#include <flixel/addons/ui/FlxUITypedButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_ICursorPointable
#include <flixel/addons/ui/interfaces/ICursorPointable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIButton
#include <flixel/addons/ui/interfaces/IFlxUIButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIClickable
#include <flixel/addons/ui/interfaces/IFlxUIClickable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIWidget
#include <flixel/addons/ui/interfaces/IFlxUIWidget.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IHasParams
#include <flixel/addons/ui/interfaces/IHasParams.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IResizable
#include <flixel/addons/ui/interfaces/IResizable.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton
#include <flixel/ui/FlxTypedButton.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7ec0642bbae75140_26_new,"flixel.addons.ui.FlxUISpriteButton","new",0x3b737abe,"flixel.addons.ui.FlxUISpriteButton.new","flixel/addons/ui/FlxUISpriteButton.hx",26,0xcd05ded3)
HX_LOCAL_STACK_FRAME(_hx_pos_7ec0642bbae75140_42_resize,"flixel.addons.ui.FlxUISpriteButton","resize",0xe723fe56,"flixel.addons.ui.FlxUISpriteButton.resize","flixel/addons/ui/FlxUISpriteButton.hx",42,0xcd05ded3)
HX_LOCAL_STACK_FRAME(_hx_pos_7ec0642bbae75140_48_autoCenterLabel,"flixel.addons.ui.FlxUISpriteButton","autoCenterLabel",0x0d1e740e,"flixel.addons.ui.FlxUISpriteButton.autoCenterLabel","flixel/addons/ui/FlxUISpriteButton.hx",48,0xcd05ded3)
namespace flixel{
namespace addons{
namespace ui{

void FlxUISpriteButton_obj::__construct(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y, ::flixel::FlxSprite Asset, ::Dynamic OnClick){
Float X = __o_X.Default(0);
Float Y = __o_Y.Default(0);
            	HX_STACKFRAME(&_hx_pos_7ec0642bbae75140_26_new)
HXLINE(  27)		super::__construct(X,Y,OnClick);
HXLINE(  32)		this->up_color = (this->over_color = (this->down_color = (this->up_toggle_color = (this->over_toggle_color = (this->down_toggle_color = (int)-1)))));
HXLINE(  34)		if (hx::IsNotNull( Asset )) {
HXLINE(  35)			this->set_label(Asset);
            		}
            	}

Dynamic FlxUISpriteButton_obj::__CreateEmpty() { return new FlxUISpriteButton_obj; }

void *FlxUISpriteButton_obj::_hx_vtable = 0;

Dynamic FlxUISpriteButton_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxUISpriteButton_obj > _hx_result = new FlxUISpriteButton_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool FlxUISpriteButton_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x1aa5d1c2) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x1aa5d1c2;
			}
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		if (inClassId<=(int)0x50397899) {
			return inClassId==(int)0x2e105115 || inClassId==(int)0x50397899;
		} else {
			return inClassId==(int)0x56a6c69a;
		}
	}
}

static ::flixel::addons::ui::interfaces::IFlxUIButton_obj _hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_addons_ui_interfaces_IFlxUIButton= {
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::destroy,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_toggled,
	(  ::flixel::FlxSprite (hx::Object::*)( ::flixel::FlxSprite))&::flixel::addons::ui::FlxUISpriteButton_obj::set_toggle_label,
	( bool (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::get_justMousedOver,
	( bool (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::get_mouseIsOver,
	( bool (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::get_mouseIsOut,
	( bool (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::get_justMousedOut,
	( int (hx::Object::*)(int))&::flixel::addons::ui::FlxUISpriteButton_obj::set_status,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::autoCenterLabel,
	( void (hx::Object::*)(::cpp::VirtualArray,hx::Null< int > ,hx::Null< int > ,::Array< ::Dynamic>,hx::Null< int > ,hx::Null< Float > ,hx::Null< bool > ,hx::Null< int > ,hx::Null< int > ,::Array< int >))&::flixel::addons::ui::FlxUISpriteButton_obj::loadGraphicSlice9,
	( void (hx::Object::*)(::cpp::VirtualArray,::String))&::flixel::addons::ui::FlxUISpriteButton_obj::loadGraphicsMultiple,
	( void (hx::Object::*)( ::Dynamic,hx::Null< bool > ,::String))&::flixel::addons::ui::FlxUISpriteButton_obj::loadGraphicsUpOverDown,
	( void (hx::Object::*)(::String))&::flixel::addons::ui::FlxUISpriteButton_obj::forceStateHandler,
};

static ::flixel::IFlxSprite_obj _hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_IFlxSprite= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::toString,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_x,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_y,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_alpha,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_angle,
	( int (hx::Object::*)(int))&::flixel::addons::ui::FlxUISpriteButton_obj::set_facing,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_moves,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_immovable,
	( void (hx::Object::*)(Float,Float))&::flixel::addons::ui::FlxUISpriteButton_obj::reset,
	( void (hx::Object::*)(hx::Null< Float > ,hx::Null< Float > ))&::flixel::addons::ui::FlxUISpriteButton_obj::setPosition,
};

static ::flixel::IFlxBasic_obj _hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_IFlxBasic= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::toString,
};

static ::flixel::util::IFlxDestroyable_obj _hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_util_IFlxDestroyable= {
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::destroy,
};

static ::flixel::addons::ui::interfaces::IFlxUIWidget_obj _hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_addons_ui_interfaces_IFlxUIWidget= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::toString,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_x,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_y,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_alpha,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_angle,
	( int (hx::Object::*)(int))&::flixel::addons::ui::FlxUISpriteButton_obj::set_facing,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_moves,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUISpriteButton_obj::set_immovable,
	( void (hx::Object::*)(Float,Float))&::flixel::addons::ui::FlxUISpriteButton_obj::reset,
	( void (hx::Object::*)(hx::Null< Float > ,hx::Null< Float > ))&::flixel::addons::ui::FlxUISpriteButton_obj::setPosition,
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::get_width,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_width,
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUISpriteButton_obj::get_height,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUISpriteButton_obj::set_height,
};

static ::flixel::addons::ui::interfaces::IHasParams_obj _hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_addons_ui_interfaces_IHasParams= {
	( ::cpp::VirtualArray (hx::Object::*)(::cpp::VirtualArray))&::flixel::addons::ui::FlxUISpriteButton_obj::set_params,
};

void *FlxUISpriteButton_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x2772d80c: return &_hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_addons_ui_interfaces_IFlxUIButton;
		case (int)0x897c83aa: return &_hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_IFlxSprite;
		case (int)0x284cfea9: return &_hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_IFlxBasic;
		case (int)0xd4fe2fcd: return &_hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_util_IFlxDestroyable;
		case (int)0x998525de: return &_hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_addons_ui_interfaces_IFlxUIWidget;
		case (int)0x9e5db374: return &_hx_flixel_addons_ui_FlxUISpriteButton__hx_flixel_addons_ui_interfaces_IHasParams;
	}
	return super::_hx_getInterface(inHash);
}

void FlxUISpriteButton_obj::resize(Float W,Float H){
            	HX_STACKFRAME(&_hx_pos_7ec0642bbae75140_42_resize)
HXLINE(  43)		this->super::resize(W,H);
HXLINE(  44)		this->autoCenterLabel();
            	}


void FlxUISpriteButton_obj::autoCenterLabel(){
            	HX_STACKFRAME(&_hx_pos_7ec0642bbae75140_48_autoCenterLabel)
HXDLIN(  48)		if (hx::IsNotNull( ( ( ::flixel::FlxSprite)(this->label) ) )) {
HXLINE(  49)			if (::Std_obj::is(this->label,hx::ClassOf< ::flixel::group::FlxTypedSpriteGroup >())) {
HXLINE(  50)				 ::flixel::group::FlxTypedSpriteGroup g = ( ( ::flixel::group::FlxTypedSpriteGroup)(this->label) );
HXLINE(  51)				{
HXLINE(  51)					int _g = (int)0;
HXDLIN(  51)					::Array< ::Dynamic> _g1 = g->group->members;
HXDLIN(  51)					while((_g < _g1->length)){
HXLINE(  51)						 ::flixel::FlxSprite sprite = _g1->__get(_g).StaticCast<  ::flixel::FlxSprite >();
HXDLIN(  51)						_g = (_g + (int)1);
HXLINE(  52)						sprite->set_x(((Float)-(sprite->get_width()) / (Float)(int)2));
HXLINE(  53)						sprite->set_y(((Float)-(sprite->get_height()) / (Float)(int)2));
            					}
            				}
HXLINE(  58)				Float W = g->get_width();
HXLINE(  59)				Float H = g->get_height();
HXLINE(  61)				{
HXLINE(  61)					int _g2 = (int)0;
HXDLIN(  61)					::Array< ::Dynamic> _g11 = g->group->members;
HXDLIN(  61)					while((_g2 < _g11->length)){
HXLINE(  61)						 ::flixel::FlxSprite sprite1 = _g11->__get(_g2).StaticCast<  ::flixel::FlxSprite >();
HXDLIN(  61)						_g2 = (_g2 + (int)1);
HXLINE(  62)						sprite1->set_x(((Float)(W - sprite1->get_width()) / (Float)(int)2));
HXLINE(  63)						sprite1->set_y(((Float)(H - sprite1->get_height()) / (Float)(int)2));
            					}
            				}
            			}
HXLINE(  66)			this->super::autoCenterLabel();
            		}
            	}



hx::ObjectPtr< FlxUISpriteButton_obj > FlxUISpriteButton_obj::__new(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y, ::flixel::FlxSprite Asset, ::Dynamic OnClick) {
	hx::ObjectPtr< FlxUISpriteButton_obj > __this = new FlxUISpriteButton_obj();
	__this->__construct(__o_X,__o_Y,Asset,OnClick);
	return __this;
}

hx::ObjectPtr< FlxUISpriteButton_obj > FlxUISpriteButton_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y, ::flixel::FlxSprite Asset, ::Dynamic OnClick) {
	FlxUISpriteButton_obj *__this = (FlxUISpriteButton_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxUISpriteButton_obj), true, "flixel.addons.ui.FlxUISpriteButton"));
	*(void **)__this = FlxUISpriteButton_obj::_hx_vtable;
	__this->__construct(__o_X,__o_Y,Asset,OnClick);
	return __this;
}

FlxUISpriteButton_obj::FlxUISpriteButton_obj()
{
}

hx::Val FlxUISpriteButton_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"resize") ) { return hx::Val( resize_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"autoCenterLabel") ) { return hx::Val( autoCenterLabel_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FlxUISpriteButton_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *FlxUISpriteButton_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxUISpriteButton_obj_sMemberFields[] = {
	HX_HCSTRING("resize","\xf4","\x59","\x7b","\x08"),
	HX_HCSTRING("autoCenterLabel","\xb0","\xb4","\x79","\xaf"),
	::String(null()) };

static void FlxUISpriteButton_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxUISpriteButton_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxUISpriteButton_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxUISpriteButton_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxUISpriteButton_obj::__mClass;

void FlxUISpriteButton_obj::__register()
{
	hx::Object *dummy = new FlxUISpriteButton_obj;
	FlxUISpriteButton_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.ui.FlxUISpriteButton","\xcc","\x03","\x3c","\x25");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxUISpriteButton_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxUISpriteButton_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxUISpriteButton_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxUISpriteButton_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxUISpriteButton_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxUISpriteButton_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace ui
