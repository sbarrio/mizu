// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_ui_FlxBaseMultiInput
#include <flixel/addons/ui/FlxBaseMultiInput.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxMultiGamepad
#include <flixel/addons/ui/FlxMultiGamepad.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_FlxGamepad
#include <flixel/input/gamepad/FlxGamepad.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_mappings_FlxGamepadMapping
#include <flixel/input/gamepad/mappings/FlxGamepadMapping.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8bad450b97371a8c_14_new,"flixel.addons.ui.FlxMultiGamepad","new",0x575cbdfb,"flixel.addons.ui.FlxMultiGamepad.new","flixel/addons/ui/FlxMultiGamepad.hx",14,0xf1b907f6)
HX_LOCAL_STACK_FRAME(_hx_pos_8bad450b97371a8c_23_destroy,"flixel.addons.ui.FlxMultiGamepad","destroy",0xd6258415,"flixel.addons.ui.FlxMultiGamepad.destroy","flixel/addons/ui/FlxMultiGamepad.hx",23,0xf1b907f6)
HX_LOCAL_STACK_FRAME(_hx_pos_8bad450b97371a8c_29_checkJustPressed,"flixel.addons.ui.FlxMultiGamepad","checkJustPressed",0xe0a01f73,"flixel.addons.ui.FlxMultiGamepad.checkJustPressed","flixel/addons/ui/FlxMultiGamepad.hx",29,0xf1b907f6)
HX_LOCAL_STACK_FRAME(_hx_pos_8bad450b97371a8c_35_checkJustReleased,"flixel.addons.ui.FlxMultiGamepad","checkJustReleased",0xb25172cc,"flixel.addons.ui.FlxMultiGamepad.checkJustReleased","flixel/addons/ui/FlxMultiGamepad.hx",35,0xf1b907f6)
HX_LOCAL_STACK_FRAME(_hx_pos_8bad450b97371a8c_41_checkPressed,"flixel.addons.ui.FlxMultiGamepad","checkPressed",0x0d7591bf,"flixel.addons.ui.FlxMultiGamepad.checkPressed","flixel/addons/ui/FlxMultiGamepad.hx",41,0xf1b907f6)
HX_LOCAL_STACK_FRAME(_hx_pos_8bad450b97371a8c_47_checkCombos,"flixel.addons.ui.FlxMultiGamepad","checkCombos",0x7ea06fe8,"flixel.addons.ui.FlxMultiGamepad.checkCombos","flixel/addons/ui/FlxMultiGamepad.hx",47,0xf1b907f6)
HX_LOCAL_STACK_FRAME(_hx_pos_8bad450b97371a8c_53_checkForbiddens,"flixel.addons.ui.FlxMultiGamepad","checkForbiddens",0xf615a25d,"flixel.addons.ui.FlxMultiGamepad.checkForbiddens","flixel/addons/ui/FlxMultiGamepad.hx",53,0xf1b907f6)
namespace flixel{
namespace addons{
namespace ui{

void FlxMultiGamepad_obj::__construct( ::flixel::input::gamepad::FlxGamepad Gamepad,int Input,::Array< int > Combos,::Array< int > Forbiddens){
            	HX_STACKFRAME(&_hx_pos_8bad450b97371a8c_14_new)
HXLINE(  15)		super::__construct();
HXLINE(  16)		this->input = Input;
HXLINE(  17)		this->gamepad = Gamepad;
HXLINE(  18)		this->combos = Combos;
HXLINE(  19)		this->forbiddens = Forbiddens;
            	}

Dynamic FlxMultiGamepad_obj::__CreateEmpty() { return new FlxMultiGamepad_obj; }

void *FlxMultiGamepad_obj::_hx_vtable = 0;

Dynamic FlxMultiGamepad_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxMultiGamepad_obj > _hx_result = new FlxMultiGamepad_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool FlxMultiGamepad_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x032e77d7) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x032e77d7;
	} else {
		return inClassId==(int)0x193fb0b1;
	}
}

void FlxMultiGamepad_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_8bad450b97371a8c_23_destroy)
HXLINE(  24)		this->super::destroy();
HXLINE(  25)		this->gamepad = null();
            	}


bool FlxMultiGamepad_obj::checkJustPressed(){
            	HX_STACKFRAME(&_hx_pos_8bad450b97371a8c_29_checkJustPressed)
HXLINE(  30)		if (hx::IsNull( this->gamepad )) {
HXLINE(  30)			return false;
            		}
HXLINE(  31)		 ::flixel::input::gamepad::FlxGamepad _this = this->gamepad;
HXDLIN(  31)		return _this->checkStatusRaw(_this->mapping->getRawID(this->input),(int)2);
            	}


bool FlxMultiGamepad_obj::checkJustReleased(){
            	HX_STACKFRAME(&_hx_pos_8bad450b97371a8c_35_checkJustReleased)
HXLINE(  36)		if (hx::IsNull( this->gamepad )) {
HXLINE(  36)			return false;
            		}
HXLINE(  37)		 ::flixel::input::gamepad::FlxGamepad _this = this->gamepad;
HXDLIN(  37)		return _this->checkStatusRaw(_this->mapping->getRawID(this->input),(int)-1);
            	}


bool FlxMultiGamepad_obj::checkPressed(){
            	HX_STACKFRAME(&_hx_pos_8bad450b97371a8c_41_checkPressed)
HXLINE(  42)		if (hx::IsNull( this->gamepad )) {
HXLINE(  42)			return false;
            		}
HXLINE(  43)		 ::flixel::input::gamepad::FlxGamepad _this = this->gamepad;
HXDLIN(  43)		return _this->checkStatusRaw(_this->mapping->getRawID(this->input),(int)1);
            	}


bool FlxMultiGamepad_obj::checkCombos(bool value){
            	HX_STACKFRAME(&_hx_pos_8bad450b97371a8c_47_checkCombos)
HXLINE(  48)		if (hx::IsNull( this->gamepad )) {
HXLINE(  48)			return false;
            		}
HXLINE(  49)		return (this->gamepad->anyPressed(this->combos) == value);
            	}


bool FlxMultiGamepad_obj::checkForbiddens(bool value){
            	HX_STACKFRAME(&_hx_pos_8bad450b97371a8c_53_checkForbiddens)
HXLINE(  54)		if (hx::IsNull( this->gamepad )) {
HXLINE(  54)			return false;
            		}
HXLINE(  55)		return (this->gamepad->anyPressed(this->forbiddens) == value);
            	}



hx::ObjectPtr< FlxMultiGamepad_obj > FlxMultiGamepad_obj::__new( ::flixel::input::gamepad::FlxGamepad Gamepad,int Input,::Array< int > Combos,::Array< int > Forbiddens) {
	hx::ObjectPtr< FlxMultiGamepad_obj > __this = new FlxMultiGamepad_obj();
	__this->__construct(Gamepad,Input,Combos,Forbiddens);
	return __this;
}

hx::ObjectPtr< FlxMultiGamepad_obj > FlxMultiGamepad_obj::__alloc(hx::Ctx *_hx_ctx, ::flixel::input::gamepad::FlxGamepad Gamepad,int Input,::Array< int > Combos,::Array< int > Forbiddens) {
	FlxMultiGamepad_obj *__this = (FlxMultiGamepad_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxMultiGamepad_obj), true, "flixel.addons.ui.FlxMultiGamepad"));
	*(void **)__this = FlxMultiGamepad_obj::_hx_vtable;
	__this->__construct(Gamepad,Input,Combos,Forbiddens);
	return __this;
}

FlxMultiGamepad_obj::FlxMultiGamepad_obj()
{
}

void FlxMultiGamepad_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxMultiGamepad);
	HX_MARK_MEMBER_NAME(gamepad,"gamepad");
	 ::flixel::addons::ui::FlxBaseMultiInput_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FlxMultiGamepad_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(gamepad,"gamepad");
	 ::flixel::addons::ui::FlxBaseMultiInput_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FlxMultiGamepad_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"gamepad") ) { return hx::Val( gamepad ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"checkCombos") ) { return hx::Val( checkCombos_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"checkPressed") ) { return hx::Val( checkPressed_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"checkForbiddens") ) { return hx::Val( checkForbiddens_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"checkJustPressed") ) { return hx::Val( checkJustPressed_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"checkJustReleased") ) { return hx::Val( checkJustReleased_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxMultiGamepad_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"gamepad") ) { gamepad=inValue.Cast<  ::flixel::input::gamepad::FlxGamepad >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxMultiGamepad_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("gamepad","\xa1","\xe0","\x85","\x89"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxMultiGamepad_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::input::gamepad::FlxGamepad*/ ,(int)offsetof(FlxMultiGamepad_obj,gamepad),HX_HCSTRING("gamepad","\xa1","\xe0","\x85","\x89")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FlxMultiGamepad_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxMultiGamepad_obj_sMemberFields[] = {
	HX_HCSTRING("gamepad","\xa1","\xe0","\x85","\x89"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("checkJustPressed","\xee","\xb1","\x87","\xa7"),
	HX_HCSTRING("checkJustReleased","\xf1","\x0b","\x0a","\xf6"),
	HX_HCSTRING("checkPressed","\xba","\x8a","\x6d","\x27"),
	HX_HCSTRING("checkCombos","\x4d","\xef","\x37","\xa9"),
	HX_HCSTRING("checkForbiddens","\x42","\x38","\x51","\xc3"),
	::String(null()) };

static void FlxMultiGamepad_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxMultiGamepad_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxMultiGamepad_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxMultiGamepad_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxMultiGamepad_obj::__mClass;

void FlxMultiGamepad_obj::__register()
{
	hx::Object *dummy = new FlxMultiGamepad_obj;
	FlxMultiGamepad_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.ui.FlxMultiGamepad","\x89","\xa4","\x19","\x9f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxMultiGamepad_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxMultiGamepad_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxMultiGamepad_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxMultiGamepad_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxMultiGamepad_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxMultiGamepad_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace ui
