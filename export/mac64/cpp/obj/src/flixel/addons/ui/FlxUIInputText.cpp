// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxInputText
#include <flixel/addons/ui/FlxInputText.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUI
#include <flixel/addons/ui/FlxUI.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIGroup
#include <flixel/addons/ui/FlxUIGroup.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIInputText
#include <flixel/addons/ui/FlxUIInputText.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIWidget
#include <flixel/addons/ui/interfaces/IFlxUIWidget.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IHasParams
#include <flixel/addons/ui/interfaces/IHasParams.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IResizable
#include <flixel/addons/ui/interfaces/IResizable.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3220fe253d6a28c5_10_new,"flixel.addons.ui.FlxUIInputText","new",0x1be658b4,"flixel.addons.ui.FlxUIInputText.new","flixel/addons/ui/FlxUIInputText.hx",10,0x43f86a3b)
HX_LOCAL_STACK_FRAME(_hx_pos_3220fe253d6a28c5_21_resize,"flixel.addons.ui.FlxUIInputText","resize",0x10b3be20,"flixel.addons.ui.FlxUIInputText.resize","flixel/addons/ui/FlxUIInputText.hx",21,0x43f86a3b)
HX_LOCAL_STACK_FRAME(_hx_pos_3220fe253d6a28c5_27_onChange,"flixel.addons.ui.FlxUIInputText","onChange",0x695a4f1b,"flixel.addons.ui.FlxUIInputText.onChange","flixel/addons/ui/FlxUIInputText.hx",27,0x43f86a3b)
HX_LOCAL_STACK_FRAME(_hx_pos_3220fe253d6a28c5_16_boot,"flixel.addons.ui.FlxUIInputText","boot",0x45c0455e,"flixel.addons.ui.FlxUIInputText.boot","flixel/addons/ui/FlxUIInputText.hx",16,0x43f86a3b)
HX_LOCAL_STACK_FRAME(_hx_pos_3220fe253d6a28c5_17_boot,"flixel.addons.ui.FlxUIInputText","boot",0x45c0455e,"flixel.addons.ui.FlxUIInputText.boot","flixel/addons/ui/FlxUIInputText.hx",17,0x43f86a3b)
HX_LOCAL_STACK_FRAME(_hx_pos_3220fe253d6a28c5_18_boot,"flixel.addons.ui.FlxUIInputText","boot",0x45c0455e,"flixel.addons.ui.FlxUIInputText.boot","flixel/addons/ui/FlxUIInputText.hx",18,0x43f86a3b)
HX_LOCAL_STACK_FRAME(_hx_pos_3220fe253d6a28c5_19_boot,"flixel.addons.ui.FlxUIInputText","boot",0x45c0455e,"flixel.addons.ui.FlxUIInputText.boot","flixel/addons/ui/FlxUIInputText.hx",19,0x43f86a3b)
namespace flixel{
namespace addons{
namespace ui{

void FlxUIInputText_obj::__construct( ::Dynamic X, ::Dynamic Y, ::Dynamic Width,::String Text, ::Dynamic size, ::Dynamic TextColor, ::Dynamic BackgroundColor, ::Dynamic EmbeddedFont){
            	HX_STACKFRAME(&_hx_pos_3220fe253d6a28c5_10_new)
HXLINE(  14)		this->broadcastToFlxUI = true;
HXLINE(  10)		super::__construct(X,Y,Width,Text,size,TextColor,BackgroundColor,EmbeddedFont);
            	}

Dynamic FlxUIInputText_obj::__CreateEmpty() { return new FlxUIInputText_obj; }

void *FlxUIInputText_obj::_hx_vtable = 0;

Dynamic FlxUIInputText_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxUIInputText_obj > _hx_result = new FlxUIInputText_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7]);
	return _hx_result;
}

bool FlxUIInputText_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2b88bf34) {
		if (inClassId<=(int)0x25a685e0) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x25a685e0;
			}
		} else {
			return inClassId==(int)0x2b88bf34;
		}
	} else {
		if (inClassId<=(int)0x4d1b55ae) {
			return inClassId==(int)0x2e105115 || inClassId==(int)0x4d1b55ae;
		} else {
			return inClassId==(int)0x6fc11e2c;
		}
	}
}

static ::flixel::IFlxSprite_obj _hx_flixel_addons_ui_FlxUIInputText__hx_flixel_IFlxSprite= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::toString,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_x,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_y,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_alpha,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_angle,
	( int (hx::Object::*)(int))&::flixel::addons::ui::FlxUIInputText_obj::set_facing,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_moves,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_immovable,
	( void (hx::Object::*)(Float,Float))&::flixel::addons::ui::FlxUIInputText_obj::reset,
	( void (hx::Object::*)(hx::Null< Float > ,hx::Null< Float > ))&::flixel::addons::ui::FlxUIInputText_obj::setPosition,
};

static ::flixel::IFlxBasic_obj _hx_flixel_addons_ui_FlxUIInputText__hx_flixel_IFlxBasic= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::toString,
};

static ::flixel::addons::ui::interfaces::IFlxUIWidget_obj _hx_flixel_addons_ui_FlxUIInputText__hx_flixel_addons_ui_interfaces_IFlxUIWidget= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::toString,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_x,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_y,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_alpha,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_angle,
	( int (hx::Object::*)(int))&::flixel::addons::ui::FlxUIInputText_obj::set_facing,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_moves,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIInputText_obj::set_immovable,
	( void (hx::Object::*)(Float,Float))&::flixel::addons::ui::FlxUIInputText_obj::reset,
	( void (hx::Object::*)(hx::Null< Float > ,hx::Null< Float > ))&::flixel::addons::ui::FlxUIInputText_obj::setPosition,
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::get_width,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_width,
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::get_height,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_height,
};

static ::flixel::addons::ui::interfaces::IHasParams_obj _hx_flixel_addons_ui_FlxUIInputText__hx_flixel_addons_ui_interfaces_IHasParams= {
	( ::cpp::VirtualArray (hx::Object::*)(::cpp::VirtualArray))&::flixel::addons::ui::FlxUIInputText_obj::set_params,
};

static ::flixel::addons::ui::interfaces::IResizable_obj _hx_flixel_addons_ui_FlxUIInputText__hx_flixel_addons_ui_interfaces_IResizable= {
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::get_width,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_width,
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUIInputText_obj::get_height,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIInputText_obj::set_height,
	( void (hx::Object::*)(Float,Float))&::flixel::addons::ui::FlxUIInputText_obj::resize,
};

void *FlxUIInputText_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x897c83aa: return &_hx_flixel_addons_ui_FlxUIInputText__hx_flixel_IFlxSprite;
		case (int)0x284cfea9: return &_hx_flixel_addons_ui_FlxUIInputText__hx_flixel_IFlxBasic;
		case (int)0x998525de: return &_hx_flixel_addons_ui_FlxUIInputText__hx_flixel_addons_ui_interfaces_IFlxUIWidget;
		case (int)0x9e5db374: return &_hx_flixel_addons_ui_FlxUIInputText__hx_flixel_addons_ui_interfaces_IHasParams;
		case (int)0x194a3c9f: return &_hx_flixel_addons_ui_FlxUIInputText__hx_flixel_addons_ui_interfaces_IResizable;
	}
	return super::_hx_getInterface(inHash);
}

void FlxUIInputText_obj::resize(Float w,Float h){
            	HX_STACKFRAME(&_hx_pos_3220fe253d6a28c5_21_resize)
HXLINE(  22)		this->set_width(w);
HXLINE(  23)		this->set_height(h);
HXLINE(  24)		this->calcFrame(null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxUIInputText_obj,resize,(void))

void FlxUIInputText_obj::onChange(::String action){
            	HX_STACKFRAME(&_hx_pos_3220fe253d6a28c5_27_onChange)
HXLINE(  28)		this->super::onChange(action);
HXLINE(  29)		if (this->broadcastToFlxUI) {
HXLINE(  30)			::String _hx_switch_0 = action;
            			if (  (_hx_switch_0==HX_("backspace",3f,85,ea,ca)) ||  (_hx_switch_0==HX_("delete",2b,c0,d8,6a)) ){
HXLINE(  35)				::flixel::addons::ui::FlxUI_obj::event(HX_("delete_input_text",16,b7,28,af),hx::ObjectPtr<OBJ_>(this),this->text,this->params);
HXLINE(  36)				::flixel::addons::ui::FlxUI_obj::event(HX_("change_input_text",f1,11,47,68),hx::ObjectPtr<OBJ_>(this),this->text,this->params);
HXLINE(  33)				goto _hx_goto_2;
            			}
            			if (  (_hx_switch_0==HX_("enter",18,6d,86,70)) ){
HXLINE(  32)				::flixel::addons::ui::FlxUI_obj::event(HX_("enter_input_text",49,07,7b,5a),hx::ObjectPtr<OBJ_>(this),this->text,this->params);
HXDLIN(  32)				goto _hx_goto_2;
            			}
            			if (  (_hx_switch_0==HX_("input",0a,c4,1d,be)) ){
HXLINE(  38)				::flixel::addons::ui::FlxUI_obj::event(HX_("input_input_text",97,11,0d,4c),hx::ObjectPtr<OBJ_>(this),this->text,this->params);
HXLINE(  39)				::flixel::addons::ui::FlxUI_obj::event(HX_("change_input_text",f1,11,47,68),hx::ObjectPtr<OBJ_>(this),this->text,this->params);
HXLINE(  37)				goto _hx_goto_2;
            			}
            			_hx_goto_2:;
            		}
            	}


::String FlxUIInputText_obj::CHANGE_EVENT;

::String FlxUIInputText_obj::ENTER_EVENT;

::String FlxUIInputText_obj::DELETE_EVENT;

::String FlxUIInputText_obj::INPUT_EVENT;


hx::ObjectPtr< FlxUIInputText_obj > FlxUIInputText_obj::__new( ::Dynamic X, ::Dynamic Y, ::Dynamic Width,::String Text, ::Dynamic size, ::Dynamic TextColor, ::Dynamic BackgroundColor, ::Dynamic EmbeddedFont) {
	hx::ObjectPtr< FlxUIInputText_obj > __this = new FlxUIInputText_obj();
	__this->__construct(X,Y,Width,Text,size,TextColor,BackgroundColor,EmbeddedFont);
	return __this;
}

hx::ObjectPtr< FlxUIInputText_obj > FlxUIInputText_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic X, ::Dynamic Y, ::Dynamic Width,::String Text, ::Dynamic size, ::Dynamic TextColor, ::Dynamic BackgroundColor, ::Dynamic EmbeddedFont) {
	FlxUIInputText_obj *__this = (FlxUIInputText_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxUIInputText_obj), true, "flixel.addons.ui.FlxUIInputText"));
	*(void **)__this = FlxUIInputText_obj::_hx_vtable;
	__this->__construct(X,Y,Width,Text,size,TextColor,BackgroundColor,EmbeddedFont);
	return __this;
}

FlxUIInputText_obj::FlxUIInputText_obj()
{
}

void FlxUIInputText_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxUIInputText);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(broadcastToFlxUI,"broadcastToFlxUI");
	 ::flixel::addons::ui::FlxInputText_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FlxUIInputText_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(broadcastToFlxUI,"broadcastToFlxUI");
	 ::flixel::addons::ui::FlxInputText_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FlxUIInputText_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return hx::Val( name ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"resize") ) { return hx::Val( resize_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onChange") ) { return hx::Val( onChange_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"broadcastToFlxUI") ) { return hx::Val( broadcastToFlxUI ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxUIInputText_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"broadcastToFlxUI") ) { broadcastToFlxUI=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxUIInputText_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("name","\x4b","\x72","\xff","\x48"));
	outFields->push(HX_HCSTRING("broadcastToFlxUI","\xca","\x32","\x56","\x1a"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxUIInputText_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(FlxUIInputText_obj,name),HX_HCSTRING("name","\x4b","\x72","\xff","\x48")},
	{hx::fsBool,(int)offsetof(FlxUIInputText_obj,broadcastToFlxUI),HX_HCSTRING("broadcastToFlxUI","\xca","\x32","\x56","\x1a")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo FlxUIInputText_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &FlxUIInputText_obj::CHANGE_EVENT,HX_HCSTRING("CHANGE_EVENT","\xab","\x38","\xff","\x8d")},
	{hx::fsString,(void *) &FlxUIInputText_obj::ENTER_EVENT,HX_HCSTRING("ENTER_EVENT","\x33","\xf6","\xec","\x35")},
	{hx::fsString,(void *) &FlxUIInputText_obj::DELETE_EVENT,HX_HCSTRING("DELETE_EVENT","\xa6","\xa5","\x69","\x0d")},
	{hx::fsString,(void *) &FlxUIInputText_obj::INPUT_EVENT,HX_HCSTRING("INPUT_EVENT","\xa5","\x0e","\xf3","\xd3")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String FlxUIInputText_obj_sMemberFields[] = {
	HX_HCSTRING("name","\x4b","\x72","\xff","\x48"),
	HX_HCSTRING("broadcastToFlxUI","\xca","\x32","\x56","\x1a"),
	HX_HCSTRING("resize","\xf4","\x59","\x7b","\x08"),
	HX_HCSTRING("onChange","\xef","\x87","\x1f","\x97"),
	::String(null()) };

static void FlxUIInputText_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxUIInputText_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(FlxUIInputText_obj::CHANGE_EVENT,"CHANGE_EVENT");
	HX_MARK_MEMBER_NAME(FlxUIInputText_obj::ENTER_EVENT,"ENTER_EVENT");
	HX_MARK_MEMBER_NAME(FlxUIInputText_obj::DELETE_EVENT,"DELETE_EVENT");
	HX_MARK_MEMBER_NAME(FlxUIInputText_obj::INPUT_EVENT,"INPUT_EVENT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxUIInputText_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxUIInputText_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(FlxUIInputText_obj::CHANGE_EVENT,"CHANGE_EVENT");
	HX_VISIT_MEMBER_NAME(FlxUIInputText_obj::ENTER_EVENT,"ENTER_EVENT");
	HX_VISIT_MEMBER_NAME(FlxUIInputText_obj::DELETE_EVENT,"DELETE_EVENT");
	HX_VISIT_MEMBER_NAME(FlxUIInputText_obj::INPUT_EVENT,"INPUT_EVENT");
};

#endif

hx::Class FlxUIInputText_obj::__mClass;

static ::String FlxUIInputText_obj_sStaticFields[] = {
	HX_HCSTRING("CHANGE_EVENT","\xab","\x38","\xff","\x8d"),
	HX_HCSTRING("ENTER_EVENT","\x33","\xf6","\xec","\x35"),
	HX_HCSTRING("DELETE_EVENT","\xa6","\xa5","\x69","\x0d"),
	HX_HCSTRING("INPUT_EVENT","\xa5","\x0e","\xf3","\xd3"),
	::String(null())
};

void FlxUIInputText_obj::__register()
{
	hx::Object *dummy = new FlxUIInputText_obj;
	FlxUIInputText_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.ui.FlxUIInputText","\xc2","\x2e","\x3f","\xcf");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxUIInputText_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FlxUIInputText_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxUIInputText_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxUIInputText_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxUIInputText_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxUIInputText_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxUIInputText_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxUIInputText_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_3220fe253d6a28c5_16_boot)
HXDLIN(  16)		CHANGE_EVENT = HX_("change_input_text",f1,11,47,68);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3220fe253d6a28c5_17_boot)
HXDLIN(  17)		ENTER_EVENT = HX_("enter_input_text",49,07,7b,5a);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3220fe253d6a28c5_18_boot)
HXDLIN(  18)		DELETE_EVENT = HX_("delete_input_text",16,b7,28,af);
            	}
{
            	HX_STACKFRAME(&_hx_pos_3220fe253d6a28c5_19_boot)
HXDLIN(  19)		INPUT_EVENT = HX_("input_input_text",97,11,0d,4c);
            	}
}

} // end namespace flixel
} // end namespace addons
} // end namespace ui
