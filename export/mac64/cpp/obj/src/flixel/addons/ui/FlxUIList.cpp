// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIButton
#include <flixel/addons/ui/FlxUIButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIGroup
#include <flixel/addons/ui/FlxUIGroup.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIList
#include <flixel/addons/ui/FlxUIList.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISpriteButton
#include <flixel/addons/ui/FlxUISpriteButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIText
#include <flixel/addons/ui/FlxUIText.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUITypedButton
#include <flixel/addons/ui/FlxUITypedButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_ICursorPointable
#include <flixel/addons/ui/interfaces/ICursorPointable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIButton
#include <flixel/addons/ui/interfaces/IFlxUIButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIClickable
#include <flixel/addons/ui/interfaces/IFlxUIClickable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIWidget
#include <flixel/addons/ui/interfaces/IFlxUIWidget.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IHasParams
#include <flixel/addons/ui/interfaces/IHasParams.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_ILabeled
#include <flixel/addons/ui/interfaces/ILabeled.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IResizable
#include <flixel/addons/ui/interfaces/IResizable.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton
#include <flixel/ui/FlxTypedButton.h>
#endif
#ifndef INCLUDED_flixel_ui__FlxButton_FlxButtonEvent
#include <flixel/ui/_FlxButton/FlxButtonEvent.h>
#endif
#ifndef INCLUDED_flixel_util_FlxPool_flixel_math_FlxPoint
#include <flixel/util/FlxPool_flixel_math_FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPool
#include <flixel/util/IFlxPool.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_9_new,"flixel.addons.ui.FlxUIList","new",0x6509e5c5,"flixel.addons.ui.FlxUIList.new","flixel/addons/ui/FlxUIList.hx",9,0xc14028ac)
HX_DEFINE_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_89_new,"flixel.addons.ui.FlxUIList","new",0x6509e5c5,"flixel.addons.ui.FlxUIList.new","flixel/addons/ui/FlxUIList.hx",89,0xc14028ac)
HX_DEFINE_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_113_new,"flixel.addons.ui.FlxUIList","new",0x6509e5c5,"flixel.addons.ui.FlxUIList.new","flixel/addons/ui/FlxUIList.hx",113,0xc14028ac)
HX_DEFINE_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_118_new,"flixel.addons.ui.FlxUIList","new",0x6509e5c5,"flixel.addons.ui.FlxUIList.new","flixel/addons/ui/FlxUIList.hx",118,0xc14028ac)
HX_DEFINE_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_123_new,"flixel.addons.ui.FlxUIList","new",0x6509e5c5,"flixel.addons.ui.FlxUIList.new","flixel/addons/ui/FlxUIList.hx",123,0xc14028ac)
HX_DEFINE_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_145_new,"flixel.addons.ui.FlxUIList","new",0x6509e5c5,"flixel.addons.ui.FlxUIList.new","flixel/addons/ui/FlxUIList.hx",145,0xc14028ac)
HX_DEFINE_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_150_new,"flixel.addons.ui.FlxUIList","new",0x6509e5c5,"flixel.addons.ui.FlxUIList.new","flixel/addons/ui/FlxUIList.hx",150,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_16_set_scrollIndex,"flixel.addons.ui.FlxUIList","set_scrollIndex",0xb192314d,"flixel.addons.ui.FlxUIList.set_scrollIndex","flixel/addons/ui/FlxUIList.hx",16,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_24_set_stacking,"flixel.addons.ui.FlxUIList","set_stacking",0xb189d012,"flixel.addons.ui.FlxUIList.set_stacking","flixel/addons/ui/FlxUIList.hx",24,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_32_set_spacing,"flixel.addons.ui.FlxUIList","set_spacing",0x33b41d0b,"flixel.addons.ui.FlxUIList.set_spacing","flixel/addons/ui/FlxUIList.hx",32,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_45_set_moreString,"flixel.addons.ui.FlxUIList","set_moreString",0xc23895be,"flixel.addons.ui.FlxUIList.set_moreString","flixel/addons/ui/FlxUIList.hx",45,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_164_destroy,"flixel.addons.ui.FlxUIList","destroy",0xade358df,"flixel.addons.ui.FlxUIList.destroy","flixel/addons/ui/FlxUIList.hx",164,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_174_setSize,"flixel.addons.ui.FlxUIList","setSize",0x9b350d68,"flixel.addons.ui.FlxUIList.setSize","flixel/addons/ui/FlxUIList.hx",174,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_188_add,"flixel.addons.ui.FlxUIList","add",0x65000786,"flixel.addons.ui.FlxUIList.add","flixel/addons/ui/FlxUIList.hx",188,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_198_safeAdd,"flixel.addons.ui.FlxUIList","safeAdd",0xfdf2e6b9,"flixel.addons.ui.FlxUIList.safeAdd","flixel/addons/ui/FlxUIList.hx",198,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_204_getMoreString,"flixel.addons.ui.FlxUIList","getMoreString",0x93c9dc21,"flixel.addons.ui.FlxUIList.getMoreString","flixel/addons/ui/FlxUIList.hx",204,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_213_set_visible,"flixel.addons.ui.FlxUIList","set_visible",0x451d61fa,"flixel.addons.ui.FlxUIList.set_visible","flixel/addons/ui/FlxUIList.hx",213,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_219_onClick,"flixel.addons.ui.FlxUIList","onClick",0x67f9468e,"flixel.addons.ui.FlxUIList.onClick","flixel/addons/ui/FlxUIList.hx",219,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_224_refreshList,"flixel.addons.ui.FlxUIList","refreshList",0x4de02e3e,"flixel.addons.ui.FlxUIList.refreshList","flixel/addons/ui/FlxUIList.hx",224,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_318_get_width,"flixel.addons.ui.FlxUIList","get_width",0x89f7c182,"flixel.addons.ui.FlxUIList.get_width","flixel/addons/ui/FlxUIList.hx",318,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_322_get_height,"flixel.addons.ui.FlxUIList","get_height",0xe52108eb,"flixel.addons.ui.FlxUIList.get_height","flixel/addons/ui/FlxUIList.hx",322,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_325_set_width,"flixel.addons.ui.FlxUIList","set_width",0x6d48ad8e,"flixel.addons.ui.FlxUIList.set_width","flixel/addons/ui/FlxUIList.hx",325,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_331_set_height,"flixel.addons.ui.FlxUIList","set_height",0xe89ea75f,"flixel.addons.ui.FlxUIList.set_height","flixel/addons/ui/FlxUIList.hx",331,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_11_boot,"flixel.addons.ui.FlxUIList","boot",0xfbb8272d,"flixel.addons.ui.FlxUIList.boot","flixel/addons/ui/FlxUIList.hx",11,0xc14028ac)
HX_LOCAL_STACK_FRAME(_hx_pos_a5e703d0cd5c8e74_12_boot,"flixel.addons.ui.FlxUIList","boot",0xfbb8272d,"flixel.addons.ui.FlxUIList.boot","flixel/addons/ui/FlxUIList.hx",12,0xc14028ac)
namespace flixel{
namespace addons{
namespace ui{

void FlxUIList_obj::__construct(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::Array< ::Dynamic> Widgets,hx::Null< Float >  __o_W,hx::Null< Float >  __o_H,::String __o_MoreString, ::Dynamic __o_Stacking, ::Dynamic __o_Spacing, ::flixel::math::FlxPoint PrevButtonOffset, ::flixel::math::FlxPoint NextButtonOffset,::Dynamic PrevButton,::Dynamic NextButton){
Float X = __o_X.Default(0);
Float Y = __o_Y.Default(0);
Float W = __o_W.Default(0);
Float H = __o_H.Default(0);
::String MoreString = __o_MoreString.Default(HX_HCSTRING("<X> more...","\x7b","\x65","\x54","\x87"));
 ::Dynamic Stacking = __o_Stacking.Default(1);
 ::Dynamic Spacing = __o_Spacing.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_9_new)
HXLINE( 202)		this->_skipRefresh = false;
HXLINE(  15)		this->scrollIndex = (int)0;
HXLINE(  72)		this->_skipRefresh = true;
HXLINE(  73)		super::__construct(X,Y);
HXLINE(  74)		this->set_stacking(Stacking);
HXLINE(  75)		this->set_spacing(Spacing);
HXLINE(  76)		if (hx::IsNotNull( Widgets )) {
HXLINE(  77)			int _g = (int)0;
HXDLIN(  77)			while((_g < Widgets->length)){
HXLINE(  77)				::Dynamic widget = Widgets->__get(_g);
HXDLIN(  77)				_g = (_g + (int)1);
HXLINE(  78)				this->add(( ( ::flixel::FlxSprite)(widget) ));
            			}
            		}
HXLINE(  82)		this->prevButton = PrevButton;
HXLINE(  83)		this->nextButton = NextButton;
HXLINE(  84)		this->prevButtonOffset = PrevButtonOffset;
HXLINE(  85)		this->nextButtonOffset = NextButtonOffset;
HXLINE(  86)		this->set_moreString(MoreString);
HXLINE(  88)		if (hx::IsNull( this->prevButton )) {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f) HXARGC(0)
            			void _hx_run(){
            				HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_89_new)
HXLINE(  89)				f((int)-1);
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE(  89)			 ::Dynamic f = this->onClick_dyn();
HXDLIN(  89)			 ::flixel::addons::ui::FlxUIButton pButton =  ::flixel::addons::ui::FlxUIButton_obj::__alloc( HX_CTX ,(int)0,(int)0,HX_(" ",20,00,00,00), ::Dynamic(new _hx_Closure_0(f)),null(),null(),null());
HXLINE(  90)			if ((this->stacking == (int)0)) {
HXLINE(  91)				pButton->loadGraphicsUpOverDown(HX_("flixel/flixel-ui/img/button_arrow_left.png",7c,5a,70,a6),null(),null());
HXLINE(  92)				 ::flixel::addons::ui::FlxUIText pButton1 = ( ( ::flixel::addons::ui::FlxUIText)(pButton->label) );
HXDLIN(  92)				pButton1->set_width(( ( ::flixel::text::FlxText)(pButton->label) )->set_fieldWidth((int)100));
HXLINE(  93)				 ::flixel::addons::ui::FlxUIText pButton2 = ( ( ::flixel::addons::ui::FlxUIText)(pButton->label) );
HXDLIN(  93)				pButton2->set_text(this->getMoreString((int)0));
HXLINE(  95)				Float _hx_tmp = pButton->get_width();
HXDLIN(  95)				Float _hx_tmp1 = (_hx_tmp - ( ( ::flixel::text::FlxText)(pButton->label) )->get_width());
HXDLIN(  95)				pButton->setAllLabelOffsets(_hx_tmp1,(pButton->get_height() + (int)2));
HXLINE(  97)				( ( ::flixel::text::FlxText)(pButton->label) )->set_alignment(HX_("right",dc,0b,64,e9));
            			}
            			else {
HXLINE(  99)				pButton->loadGraphicsUpOverDown(HX_("flixel/flixel-ui/img/button_arrow_up.png",50,b0,49,c1),null(),null());
HXLINE( 100)				 ::flixel::addons::ui::FlxUIText pButton3 = ( ( ::flixel::addons::ui::FlxUIText)(pButton->label) );
HXDLIN( 100)				pButton3->set_width(( ( ::flixel::text::FlxText)(pButton->label) )->set_fieldWidth((int)100));
HXLINE( 101)				 ::flixel::addons::ui::FlxUIText pButton4 = ( ( ::flixel::addons::ui::FlxUIText)(pButton->label) );
HXDLIN( 101)				pButton4->set_text(this->getMoreString((int)0));
HXLINE( 102)				pButton->setAllLabelOffsets((int)0,(int)0);
HXLINE( 103)				Float _hx_tmp2 = (pButton->get_width() + (int)2);
HXDLIN( 103)				Float _hx_tmp3 = pButton->get_height();
HXDLIN( 103)				pButton->setCenterLabelOffset(_hx_tmp2,(_hx_tmp3 - ( ( ::flixel::text::FlxText)(pButton->label) )->get_height()));
HXLINE( 104)				( ( ::flixel::text::FlxText)(pButton->label) )->set_alignment(HX_("left",07,08,b0,47));
            			}
HXLINE( 106)			this->prevButton = pButton;
            		}
            		else {
HXLINE( 110)			if (::Std_obj::is(this->prevButton,hx::ClassOf< ::flixel::addons::ui::FlxUIButton >())) {
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f1) HXARGC(0)
            				void _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_113_new)
HXLINE( 113)					f1((int)-1);
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE( 112)				 ::flixel::addons::ui::FlxUIButton fuib = ( ( ::flixel::addons::ui::FlxUIButton)(this->prevButton) );
HXLINE( 113)				 ::Dynamic f1 = this->onClick_dyn();
HXDLIN( 113)				 ::Dynamic _hx_tmp4 =  ::Dynamic(new _hx_Closure_1(f1));
HXDLIN( 113)				fuib->onUp->callback = _hx_tmp4;
            			}
HXLINE( 115)			if (::Std_obj::is(this->prevButton,hx::ClassOf< ::flixel::addons::ui::FlxUISpriteButton >())) {
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::Dynamic,f2) HXARGC(0)
            				void _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_118_new)
HXLINE( 118)					f2((int)-1);
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE( 117)				 ::flixel::addons::ui::FlxUISpriteButton fusb = ( ( ::flixel::addons::ui::FlxUISpriteButton)(this->prevButton) );
HXLINE( 118)				 ::Dynamic f2 = this->onClick_dyn();
HXDLIN( 118)				 ::Dynamic _hx_tmp5 =  ::Dynamic(new _hx_Closure_2(f2));
HXDLIN( 118)				fusb->onUp->callback = _hx_tmp5;
            			}
            		}
HXLINE( 122)		if (hx::IsNull( this->nextButton )) {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_3, ::Dynamic,f3) HXARGC(0)
            			void _hx_run(){
            				HX_GC_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_123_new)
HXLINE( 123)				f3((int)1);
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE( 123)			 ::Dynamic f3 = this->onClick_dyn();
HXDLIN( 123)			 ::flixel::addons::ui::FlxUIButton nButton =  ::flixel::addons::ui::FlxUIButton_obj::__alloc( HX_CTX ,(int)0,(int)0,HX_(" ",20,00,00,00), ::Dynamic(new _hx_Closure_3(f3)),null(),null(),null());
HXLINE( 124)			if ((this->stacking == (int)0)) {
HXLINE( 125)				nButton->loadGraphicsUpOverDown(HX_("flixel/flixel-ui/img/button_arrow_right.png",1d,44,0c,52),null(),null());
HXLINE( 126)				 ::flixel::addons::ui::FlxUIText nButton1 = ( ( ::flixel::addons::ui::FlxUIText)(nButton->label) );
HXDLIN( 126)				nButton1->set_width(( ( ::flixel::text::FlxText)(nButton->label) )->set_fieldWidth((int)100));
HXLINE( 127)				 ::flixel::addons::ui::FlxUIText nButton2 = ( ( ::flixel::addons::ui::FlxUIText)(nButton->label) );
HXDLIN( 127)				nButton2->set_text(this->getMoreString((int)0));
HXLINE( 128)				nButton->setAllLabelOffsets((int)0,(nButton->get_height() + (int)2));
HXLINE( 129)				( ( ::flixel::text::FlxText)(nButton->label) )->set_alignment(HX_("left",07,08,b0,47));
            			}
            			else {
HXLINE( 131)				nButton->loadGraphicsUpOverDown(HX_("flixel/flixel-ui/img/button_arrow_down.png",57,14,5d,d4),null(),null());
HXLINE( 132)				 ::flixel::addons::ui::FlxUIText nButton3 = ( ( ::flixel::addons::ui::FlxUIText)(nButton->label) );
HXDLIN( 132)				nButton3->set_width(( ( ::flixel::text::FlxText)(nButton->label) )->set_fieldWidth((int)100));
HXLINE( 133)				 ::flixel::addons::ui::FlxUIText nButton4 = ( ( ::flixel::addons::ui::FlxUIText)(nButton->label) );
HXDLIN( 133)				nButton4->set_text(this->getMoreString((int)0));
HXLINE( 134)				nButton->setAllLabelOffsets((int)0,(int)0);
HXLINE( 135)				nButton->setCenterLabelOffset((nButton->get_width() + (int)2),(int)0);
HXLINE( 136)				( ( ::flixel::text::FlxText)(nButton->label) )->set_alignment(HX_("left",07,08,b0,47));
            			}
HXLINE( 138)			this->nextButton = nButton;
            		}
            		else {
HXLINE( 142)			if (::Std_obj::is(this->nextButton,hx::ClassOf< ::flixel::addons::ui::FlxUIButton >())) {
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_4, ::Dynamic,f4) HXARGC(0)
            				void _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_145_new)
HXLINE( 145)					f4((int)1);
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE( 144)				 ::flixel::addons::ui::FlxUIButton fuib1 = ( ( ::flixel::addons::ui::FlxUIButton)(this->nextButton) );
HXLINE( 145)				 ::Dynamic f4 = this->onClick_dyn();
HXDLIN( 145)				 ::Dynamic _hx_tmp6 =  ::Dynamic(new _hx_Closure_4(f4));
HXDLIN( 145)				fuib1->onUp->callback = _hx_tmp6;
            			}
HXLINE( 147)			if (::Std_obj::is(this->nextButton,hx::ClassOf< ::flixel::addons::ui::FlxUISpriteButton >())) {
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_5, ::Dynamic,f5) HXARGC(0)
            				void _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_150_new)
HXLINE( 150)					f5((int)1);
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE( 149)				 ::flixel::addons::ui::FlxUISpriteButton fusb1 = ( ( ::flixel::addons::ui::FlxUISpriteButton)(this->nextButton) );
HXLINE( 150)				 ::Dynamic f5 = this->onClick_dyn();
HXDLIN( 150)				 ::Dynamic _hx_tmp7 =  ::Dynamic(new _hx_Closure_5(f5));
HXDLIN( 150)				fusb1->onUp->callback = _hx_tmp7;
            			}
            		}
HXLINE( 154)		if (hx::IsNull( this->prevButtonOffset )) {
HXLINE( 155)			 ::flixel::math::FlxPoint point = ::flixel::math::FlxPoint_obj::_pool->get()->set((int)0,(int)0);
HXDLIN( 155)			point->_inPool = false;
HXDLIN( 155)			this->prevButtonOffset = point;
            		}
HXLINE( 157)		if (hx::IsNull( this->nextButtonOffset )) {
HXLINE( 158)			 ::flixel::math::FlxPoint point1 = ::flixel::math::FlxPoint_obj::_pool->get()->set((int)0,(int)0);
HXDLIN( 158)			point1->_inPool = false;
HXDLIN( 158)			this->nextButtonOffset = point1;
            		}
HXLINE( 160)		this->_skipRefresh = false;
HXLINE( 161)		this->setSize(W,H);
            	}

Dynamic FlxUIList_obj::__CreateEmpty() { return new FlxUIList_obj; }

void *FlxUIList_obj::_hx_vtable = 0;

Dynamic FlxUIList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxUIList_obj > _hx_result = new FlxUIList_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7],inArgs[8],inArgs[9],inArgs[10],inArgs[11]);
	return _hx_result;
}

bool FlxUIList_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x0d14e421) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x0d14e421;
			}
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		if (inClassId<=(int)0x282173df) {
			return inClassId==(int)0x263b73ac || inClassId==(int)0x282173df;
		} else {
			return inClassId==(int)0x2e105115;
		}
	}
}

int FlxUIList_obj::set_scrollIndex(int i){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_16_set_scrollIndex)
HXLINE(  17)		this->scrollIndex = i;
HXLINE(  18)		this->refreshList();
HXLINE(  19)		return i;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIList_obj,set_scrollIndex,return )

int FlxUIList_obj::set_stacking(int Stacking){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_24_set_stacking)
HXLINE(  25)		this->stacking = Stacking;
HXLINE(  26)		this->refreshList();
HXLINE(  27)		return Stacking;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIList_obj,set_stacking,return )

Float FlxUIList_obj::set_spacing(Float Spacing){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_32_set_spacing)
HXLINE(  33)		this->spacing = Spacing;
HXLINE(  34)		this->refreshList();
HXLINE(  35)		return Spacing;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIList_obj,set_spacing,return )

::String FlxUIList_obj::set_moreString(::String str){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_45_set_moreString)
HXLINE(  46)		this->moreString = str;
HXLINE(  47)		this->refreshList();
HXLINE(  48)		return this->moreString;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIList_obj,set_moreString,return )

void FlxUIList_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_164_destroy)
HXLINE( 165)		this->prevButton = null();
HXLINE( 166)		this->nextButton = null();
HXLINE( 167)		this->prevButtonOffset->put();
HXLINE( 168)		this->nextButtonOffset->put();
HXLINE( 169)		this->prevButtonOffset = null();
HXLINE( 170)		this->nextButtonOffset = null();
HXLINE( 171)		this->super::destroy();
            	}


void FlxUIList_obj::setSize(Float W,Float H){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_174_setSize)
HXLINE( 175)		bool flip = false;
HXLINE( 176)		if ((this->_skipRefresh == false)) {
HXLINE( 177)			this->_skipRefresh = true;
HXLINE( 178)			flip = true;
            		}
HXLINE( 180)		this->set_width(W);
HXLINE( 181)		this->set_height(H);
HXLINE( 182)		if (flip) {
HXLINE( 183)			this->_skipRefresh = false;
            		}
HXLINE( 185)		this->refreshList();
            	}


 ::Dynamic FlxUIList_obj::add( ::Dynamic _tmp_Object){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_188_add)
HXLINE( 189)		 ::flixel::FlxSprite Object = ( ( ::flixel::FlxSprite)(_tmp_Object) );
HXDLIN( 189)		this->super::add(Object);
HXLINE( 190)		this->refreshList();
HXLINE( 191)		return Object;
            	}


 ::flixel::FlxSprite FlxUIList_obj::safeAdd( ::flixel::FlxSprite Object){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_198_safeAdd)
HXDLIN( 198)		return ( ( ::flixel::FlxSprite)(this->super::add(Object)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIList_obj,safeAdd,return )

::String FlxUIList_obj::getMoreString(int i){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_204_getMoreString)
HXLINE( 205)		::String newString = this->moreString;
HXLINE( 206)		while((newString.indexOf(HX_("<X>",22,d4,2d,00),null()) != (int)-1)){
HXLINE( 207)			newString = ::StringTools_obj::replace(newString,HX_("<X>",22,d4,2d,00),::Std_obj::string(i));
            		}
HXLINE( 209)		return newString;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIList_obj,getMoreString,return )

bool FlxUIList_obj::set_visible(bool Value){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_213_set_visible)
HXLINE( 214)		this->super::set_visible(Value);
HXLINE( 215)		this->refreshList();
HXLINE( 216)		return Value;
            	}


void FlxUIList_obj::onClick(int i){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_219_onClick)
HXLINE( 220)		{
HXLINE( 220)			 ::flixel::addons::ui::FlxUIList _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 220)			_g->set_scrollIndex((_g->scrollIndex + i));
            		}
HXLINE( 221)		this->refreshList();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIList_obj,onClick,(void))

void FlxUIList_obj::refreshList(){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_224_refreshList)
HXLINE( 225)		if (this->_skipRefresh) {
HXLINE( 226)			return;
            		}
HXLINE( 229)		this->autoBounds = false;
HXLINE( 231)		if ((this->group->members->indexOf(( ( ::flixel::FlxSprite)(this->prevButton) ),null()) != (int)-1)) {
HXLINE( 232)			this->remove(( ( ::flixel::FlxSprite)(this->prevButton) ),true);
            		}
HXLINE( 234)		if ((this->group->members->indexOf(( ( ::flixel::FlxSprite)(this->nextButton) ),null()) != (int)-1)) {
HXLINE( 235)			this->remove(( ( ::flixel::FlxSprite)(this->nextButton) ),true);
            		}
HXLINE( 238)		Float XX = (int)0;
HXLINE( 239)		Float YY = (int)0;
HXLINE( 241)		int i = (int)0;
HXLINE( 242)		bool inBounds = true;
HXLINE( 244)		if ((this->stacking == (int)0)) {
HXLINE( 245)			::Dynamic _hx_tmp = this->prevButton;
HXDLIN( 245)			Float _hx_tmp1 = this->prevButtonOffset->x;
HXDLIN( 245)			::flixel::IFlxSprite_obj::set_x(_hx_tmp,((_hx_tmp1 - ::flixel::addons::ui::interfaces::IFlxUIWidget_obj::get_width(this->prevButton)) - (int)2));
HXLINE( 246)			::flixel::IFlxSprite_obj::set_y(this->prevButton,this->prevButtonOffset->y);
HXLINE( 247)			::Dynamic _hx_tmp2 = this->nextButton;
HXDLIN( 247)			Float _hx_tmp3 = this->nextButtonOffset->x;
HXDLIN( 247)			::flixel::IFlxSprite_obj::set_x(_hx_tmp2,((_hx_tmp3 + this->get_width()) + (int)2));
HXLINE( 248)			::flixel::IFlxSprite_obj::set_y(this->nextButton,this->nextButtonOffset->y);
            		}
            		else {
HXLINE( 250)			::flixel::IFlxSprite_obj::set_x(this->prevButton,this->prevButtonOffset->x);
HXLINE( 251)			::Dynamic _hx_tmp4 = this->prevButton;
HXDLIN( 251)			Float _hx_tmp5 = this->prevButtonOffset->y;
HXDLIN( 251)			::flixel::IFlxSprite_obj::set_y(_hx_tmp4,((_hx_tmp5 - ::flixel::addons::ui::interfaces::IFlxUIWidget_obj::get_height(this->prevButton)) - (int)2));
HXLINE( 252)			::flixel::IFlxSprite_obj::set_x(this->nextButton,this->nextButtonOffset->x);
HXLINE( 253)			::Dynamic _hx_tmp6 = this->nextButton;
HXDLIN( 253)			Float _hx_tmp7 = this->nextButtonOffset->y;
HXDLIN( 253)			::flixel::IFlxSprite_obj::set_y(_hx_tmp6,((_hx_tmp7 + this->get_height()) + (int)2));
            		}
HXLINE( 256)		::Dynamic _hx_tmp8 = this->prevButton;
HXDLIN( 256)		::flixel::IFlxSprite_obj::set_x(_hx_tmp8,::Std_obj::_hx_int(( (Float)(this->prevButton->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) )));
HXLINE( 257)		::Dynamic _hx_tmp9 = this->prevButton;
HXDLIN( 257)		::flixel::IFlxSprite_obj::set_y(_hx_tmp9,::Std_obj::_hx_int(( (Float)(this->prevButton->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) )));
HXLINE( 258)		::Dynamic _hx_tmp10 = this->nextButton;
HXDLIN( 258)		::flixel::IFlxSprite_obj::set_x(_hx_tmp10,::Std_obj::_hx_int(( (Float)(this->nextButton->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) )));
HXLINE( 259)		::Dynamic _hx_tmp11 = this->nextButton;
HXDLIN( 259)		::flixel::IFlxSprite_obj::set_y(_hx_tmp11,::Std_obj::_hx_int(( (Float)(this->nextButton->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) )));
HXLINE( 261)		int highestIndex = (int)0;
HXLINE( 263)		{
HXLINE( 263)			int _g = (int)0;
HXDLIN( 263)			::Array< ::Dynamic> _g1 = this->group->members;
HXDLIN( 263)			while((_g < _g1->length)){
HXLINE( 263)				 ::flixel::FlxSprite widget = _g1->__get(_g).StaticCast<  ::flixel::FlxSprite >();
HXDLIN( 263)				_g = (_g + (int)1);
HXLINE( 264)				inBounds = false;
HXLINE( 265)				if ((i >= this->scrollIndex)) {
HXLINE( 267)					if ((this->stacking == (int)1)) {
HXLINE( 268)						Float inBounds1 = (YY + widget->get_height());
HXDLIN( 268)						if (!((inBounds1 <= this->get_height()))) {
HXLINE( 268)							inBounds = (this->get_height() <= (int)0);
            						}
            						else {
HXLINE( 268)							inBounds = true;
            						}
            					}
            					else {
HXLINE( 270)						Float inBounds2 = (XX + widget->get_width());
HXDLIN( 270)						if (!((inBounds2 <= this->get_width()))) {
HXLINE( 270)							inBounds = (this->get_width() <= (int)0);
            						}
            						else {
HXLINE( 270)							inBounds = true;
            						}
            					}
            				}
HXLINE( 273)				if (inBounds) {
HXLINE( 275)					highestIndex = i;
HXLINE( 276)					widget->set_visible(widget->set_active(true));
HXLINE( 277)					widget->set_x((this->x + XX));
HXLINE( 278)					widget->set_y((this->y + YY));
HXLINE( 279)					if ((this->stacking == (int)1)) {
HXLINE( 281)						Float YY1 = widget->get_height();
HXDLIN( 281)						YY = (YY + (YY1 + this->spacing));
            					}
            					else {
HXLINE( 285)						Float XX1 = widget->get_width();
HXDLIN( 285)						XX = (XX + (XX1 + this->spacing));
            					}
            				}
            				else {
HXLINE( 290)					widget->set_x(widget->set_y((int)0));
HXLINE( 291)					widget->set_visible(widget->set_active(false));
            				}
HXLINE( 293)				i = (i + (int)1);
            			}
            		}
HXLINE( 296)		this->amountPrevious = this->scrollIndex;
HXLINE( 297)		int _hx_tmp12 = this->group->members->get_length();
HXDLIN( 297)		this->amountNext = (_hx_tmp12 - (highestIndex + (int)1));
HXLINE( 299)		 ::flixel::addons::ui::FlxUIButton fuibutton;
HXLINE( 301)		if ((this->amountPrevious > (int)0)) {
HXLINE( 302)			this->safeAdd(( ( ::flixel::FlxSprite)(this->prevButton) ));
HXLINE( 303)			if (::Std_obj::is(this->prevButton,hx::ClassOf< ::flixel::addons::ui::FlxUIButton >())) {
HXLINE( 304)				fuibutton = ( ( ::flixel::addons::ui::FlxUIButton)(this->prevButton) );
HXLINE( 305)				 ::flixel::addons::ui::FlxUIText fuibutton1 = ( ( ::flixel::addons::ui::FlxUIText)(fuibutton->label) );
HXDLIN( 305)				fuibutton1->set_text(this->getMoreString(this->amountPrevious));
            			}
            		}
HXLINE( 308)		if ((this->amountNext > (int)0)) {
HXLINE( 309)			this->safeAdd(( ( ::flixel::FlxSprite)(this->nextButton) ));
HXLINE( 310)			if (::Std_obj::is(this->nextButton,hx::ClassOf< ::flixel::addons::ui::FlxUIButton >())) {
HXLINE( 311)				fuibutton = ( ( ::flixel::addons::ui::FlxUIButton)(this->nextButton) );
HXLINE( 312)				 ::flixel::addons::ui::FlxUIText fuibutton2 = ( ( ::flixel::addons::ui::FlxUIText)(fuibutton->label) );
HXDLIN( 312)				fuibutton2->set_text(this->getMoreString(this->amountNext));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIList_obj,refreshList,(void))

Float FlxUIList_obj::get_width(){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_318_get_width)
HXDLIN( 318)		return this->width;
            	}


Float FlxUIList_obj::get_height(){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_322_get_height)
HXDLIN( 322)		return this->height;
            	}


Float FlxUIList_obj::set_width(Float W){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_325_set_width)
HXLINE( 326)		this->width = W;
HXLINE( 327)		this->refreshList();
HXLINE( 328)		return W;
            	}


Float FlxUIList_obj::set_height(Float H){
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_331_set_height)
HXLINE( 332)		this->height = H;
HXLINE( 333)		this->refreshList();
HXLINE( 334)		return H;
            	}


int FlxUIList_obj::STACK_HORIZONTAL;

int FlxUIList_obj::STACK_VERTICAL;


hx::ObjectPtr< FlxUIList_obj > FlxUIList_obj::__new(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::Array< ::Dynamic> Widgets,hx::Null< Float >  __o_W,hx::Null< Float >  __o_H,::String __o_MoreString, ::Dynamic __o_Stacking, ::Dynamic __o_Spacing, ::flixel::math::FlxPoint PrevButtonOffset, ::flixel::math::FlxPoint NextButtonOffset,::Dynamic PrevButton,::Dynamic NextButton) {
	hx::ObjectPtr< FlxUIList_obj > __this = new FlxUIList_obj();
	__this->__construct(__o_X,__o_Y,Widgets,__o_W,__o_H,__o_MoreString,__o_Stacking,__o_Spacing,PrevButtonOffset,NextButtonOffset,PrevButton,NextButton);
	return __this;
}

hx::ObjectPtr< FlxUIList_obj > FlxUIList_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::Array< ::Dynamic> Widgets,hx::Null< Float >  __o_W,hx::Null< Float >  __o_H,::String __o_MoreString, ::Dynamic __o_Stacking, ::Dynamic __o_Spacing, ::flixel::math::FlxPoint PrevButtonOffset, ::flixel::math::FlxPoint NextButtonOffset,::Dynamic PrevButton,::Dynamic NextButton) {
	FlxUIList_obj *__this = (FlxUIList_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxUIList_obj), true, "flixel.addons.ui.FlxUIList"));
	*(void **)__this = FlxUIList_obj::_hx_vtable;
	__this->__construct(__o_X,__o_Y,Widgets,__o_W,__o_H,__o_MoreString,__o_Stacking,__o_Spacing,PrevButtonOffset,NextButtonOffset,PrevButton,NextButton);
	return __this;
}

FlxUIList_obj::FlxUIList_obj()
{
}

void FlxUIList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxUIList);
	HX_MARK_MEMBER_NAME(scrollIndex,"scrollIndex");
	HX_MARK_MEMBER_NAME(stacking,"stacking");
	HX_MARK_MEMBER_NAME(spacing,"spacing");
	HX_MARK_MEMBER_NAME(prevButtonOffset,"prevButtonOffset");
	HX_MARK_MEMBER_NAME(nextButtonOffset,"nextButtonOffset");
	HX_MARK_MEMBER_NAME(prevButton,"prevButton");
	HX_MARK_MEMBER_NAME(nextButton,"nextButton");
	HX_MARK_MEMBER_NAME(moreString,"moreString");
	HX_MARK_MEMBER_NAME(amountPrevious,"amountPrevious");
	HX_MARK_MEMBER_NAME(amountNext,"amountNext");
	HX_MARK_MEMBER_NAME(_skipRefresh,"_skipRefresh");
	 ::flixel::addons::ui::FlxUIGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FlxUIList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(scrollIndex,"scrollIndex");
	HX_VISIT_MEMBER_NAME(stacking,"stacking");
	HX_VISIT_MEMBER_NAME(spacing,"spacing");
	HX_VISIT_MEMBER_NAME(prevButtonOffset,"prevButtonOffset");
	HX_VISIT_MEMBER_NAME(nextButtonOffset,"nextButtonOffset");
	HX_VISIT_MEMBER_NAME(prevButton,"prevButton");
	HX_VISIT_MEMBER_NAME(nextButton,"nextButton");
	HX_VISIT_MEMBER_NAME(moreString,"moreString");
	HX_VISIT_MEMBER_NAME(amountPrevious,"amountPrevious");
	HX_VISIT_MEMBER_NAME(amountNext,"amountNext");
	HX_VISIT_MEMBER_NAME(_skipRefresh,"_skipRefresh");
	 ::flixel::addons::ui::FlxUIGroup_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FlxUIList_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"spacing") ) { return hx::Val( spacing ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		if (HX_FIELD_EQ(inName,"setSize") ) { return hx::Val( setSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"safeAdd") ) { return hx::Val( safeAdd_dyn() ); }
		if (HX_FIELD_EQ(inName,"onClick") ) { return hx::Val( onClick_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"stacking") ) { return hx::Val( stacking ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_width") ) { return hx::Val( get_width_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_width") ) { return hx::Val( set_width_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"prevButton") ) { return hx::Val( prevButton ); }
		if (HX_FIELD_EQ(inName,"nextButton") ) { return hx::Val( nextButton ); }
		if (HX_FIELD_EQ(inName,"moreString") ) { return hx::Val( moreString ); }
		if (HX_FIELD_EQ(inName,"amountNext") ) { return hx::Val( amountNext ); }
		if (HX_FIELD_EQ(inName,"get_height") ) { return hx::Val( get_height_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_height") ) { return hx::Val( set_height_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"scrollIndex") ) { return hx::Val( scrollIndex ); }
		if (HX_FIELD_EQ(inName,"set_spacing") ) { return hx::Val( set_spacing_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_visible") ) { return hx::Val( set_visible_dyn() ); }
		if (HX_FIELD_EQ(inName,"refreshList") ) { return hx::Val( refreshList_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"set_stacking") ) { return hx::Val( set_stacking_dyn() ); }
		if (HX_FIELD_EQ(inName,"_skipRefresh") ) { return hx::Val( _skipRefresh ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getMoreString") ) { return hx::Val( getMoreString_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"set_moreString") ) { return hx::Val( set_moreString_dyn() ); }
		if (HX_FIELD_EQ(inName,"amountPrevious") ) { return hx::Val( amountPrevious ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"set_scrollIndex") ) { return hx::Val( set_scrollIndex_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"prevButtonOffset") ) { return hx::Val( prevButtonOffset ); }
		if (HX_FIELD_EQ(inName,"nextButtonOffset") ) { return hx::Val( nextButtonOffset ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxUIList_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"spacing") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_spacing(inValue.Cast< Float >()) );spacing=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"stacking") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_stacking(inValue.Cast< int >()) );stacking=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"prevButton") ) { prevButton=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nextButton") ) { nextButton=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"moreString") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_moreString(inValue.Cast< ::String >()) );moreString=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"amountNext") ) { amountNext=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"scrollIndex") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_scrollIndex(inValue.Cast< int >()) );scrollIndex=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_skipRefresh") ) { _skipRefresh=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"amountPrevious") ) { amountPrevious=inValue.Cast< int >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"prevButtonOffset") ) { prevButtonOffset=inValue.Cast<  ::flixel::math::FlxPoint >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nextButtonOffset") ) { nextButtonOffset=inValue.Cast<  ::flixel::math::FlxPoint >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxUIList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("scrollIndex","\xc5","\xe3","\xf1","\x07"));
	outFields->push(HX_HCSTRING("stacking","\x9a","\x62","\xb6","\x99"));
	outFields->push(HX_HCSTRING("spacing","\x83","\x33","\xbb","\x91"));
	outFields->push(HX_HCSTRING("prevButtonOffset","\xb8","\x9a","\x4a","\x42"));
	outFields->push(HX_HCSTRING("nextButtonOffset","\xb8","\x60","\x7f","\x0a"));
	outFields->push(HX_HCSTRING("prevButton","\x45","\xcd","\x55","\xda"));
	outFields->push(HX_HCSTRING("nextButton","\x45","\x13","\x12","\x8f"));
	outFields->push(HX_HCSTRING("moreString","\x46","\xda","\x94","\x7c"));
	outFields->push(HX_HCSTRING("amountPrevious","\x2f","\x22","\x0f","\x11"));
	outFields->push(HX_HCSTRING("amountNext","\xeb","\x8e","\xc8","\x74"));
	outFields->push(HX_HCSTRING("_skipRefresh","\x1d","\xf7","\x9b","\xee"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxUIList_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(FlxUIList_obj,scrollIndex),HX_HCSTRING("scrollIndex","\xc5","\xe3","\xf1","\x07")},
	{hx::fsInt,(int)offsetof(FlxUIList_obj,stacking),HX_HCSTRING("stacking","\x9a","\x62","\xb6","\x99")},
	{hx::fsFloat,(int)offsetof(FlxUIList_obj,spacing),HX_HCSTRING("spacing","\x83","\x33","\xbb","\x91")},
	{hx::fsObject /*::flixel::math::FlxPoint*/ ,(int)offsetof(FlxUIList_obj,prevButtonOffset),HX_HCSTRING("prevButtonOffset","\xb8","\x9a","\x4a","\x42")},
	{hx::fsObject /*::flixel::math::FlxPoint*/ ,(int)offsetof(FlxUIList_obj,nextButtonOffset),HX_HCSTRING("nextButtonOffset","\xb8","\x60","\x7f","\x0a")},
	{hx::fsObject /*::flixel::addons::ui::interfaces::IFlxUIButton*/ ,(int)offsetof(FlxUIList_obj,prevButton),HX_HCSTRING("prevButton","\x45","\xcd","\x55","\xda")},
	{hx::fsObject /*::flixel::addons::ui::interfaces::IFlxUIButton*/ ,(int)offsetof(FlxUIList_obj,nextButton),HX_HCSTRING("nextButton","\x45","\x13","\x12","\x8f")},
	{hx::fsString,(int)offsetof(FlxUIList_obj,moreString),HX_HCSTRING("moreString","\x46","\xda","\x94","\x7c")},
	{hx::fsInt,(int)offsetof(FlxUIList_obj,amountPrevious),HX_HCSTRING("amountPrevious","\x2f","\x22","\x0f","\x11")},
	{hx::fsInt,(int)offsetof(FlxUIList_obj,amountNext),HX_HCSTRING("amountNext","\xeb","\x8e","\xc8","\x74")},
	{hx::fsBool,(int)offsetof(FlxUIList_obj,_skipRefresh),HX_HCSTRING("_skipRefresh","\x1d","\xf7","\x9b","\xee")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo FlxUIList_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &FlxUIList_obj::STACK_HORIZONTAL,HX_HCSTRING("STACK_HORIZONTAL","\xdb","\x1f","\xfd","\x43")},
	{hx::fsInt,(void *) &FlxUIList_obj::STACK_VERTICAL,HX_HCSTRING("STACK_VERTICAL","\xad","\x7f","\x2e","\xce")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String FlxUIList_obj_sMemberFields[] = {
	HX_HCSTRING("scrollIndex","\xc5","\xe3","\xf1","\x07"),
	HX_HCSTRING("set_scrollIndex","\x68","\x18","\x9f","\xc4"),
	HX_HCSTRING("stacking","\x9a","\x62","\xb6","\x99"),
	HX_HCSTRING("set_stacking","\x17","\x3a","\xc9","\x63"),
	HX_HCSTRING("spacing","\x83","\x33","\xbb","\x91"),
	HX_HCSTRING("set_spacing","\xa6","\x9a","\x22","\x22"),
	HX_HCSTRING("prevButtonOffset","\xb8","\x9a","\x4a","\x42"),
	HX_HCSTRING("nextButtonOffset","\xb8","\x60","\x7f","\x0a"),
	HX_HCSTRING("prevButton","\x45","\xcd","\x55","\xda"),
	HX_HCSTRING("nextButton","\x45","\x13","\x12","\x8f"),
	HX_HCSTRING("moreString","\x46","\xda","\x94","\x7c"),
	HX_HCSTRING("set_moreString","\x03","\x4b","\xaa","\x12"),
	HX_HCSTRING("amountPrevious","\x2f","\x22","\x0f","\x11"),
	HX_HCSTRING("amountNext","\xeb","\x8e","\xc8","\x74"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("setSize","\x83","\xe1","\xd7","\x11"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("safeAdd","\xd4","\xba","\x95","\x74"),
	HX_HCSTRING("_skipRefresh","\x1d","\xf7","\x9b","\xee"),
	HX_HCSTRING("getMoreString","\x7c","\x36","\x07","\xd9"),
	HX_HCSTRING("set_visible","\x95","\xdf","\x8b","\x33"),
	HX_HCSTRING("onClick","\xa9","\x1a","\x9c","\xde"),
	HX_HCSTRING("refreshList","\xd9","\xab","\x4e","\x3c"),
	HX_HCSTRING("get_width","\x5d","\x12","\x0c","\x0e"),
	HX_HCSTRING("get_height","\xb0","\x77","\xd3","\xf2"),
	HX_HCSTRING("set_width","\x69","\xfe","\x5c","\xf1"),
	HX_HCSTRING("set_height","\x24","\x16","\x51","\xf6"),
	::String(null()) };

static void FlxUIList_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxUIList_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(FlxUIList_obj::STACK_HORIZONTAL,"STACK_HORIZONTAL");
	HX_MARK_MEMBER_NAME(FlxUIList_obj::STACK_VERTICAL,"STACK_VERTICAL");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxUIList_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxUIList_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(FlxUIList_obj::STACK_HORIZONTAL,"STACK_HORIZONTAL");
	HX_VISIT_MEMBER_NAME(FlxUIList_obj::STACK_VERTICAL,"STACK_VERTICAL");
};

#endif

hx::Class FlxUIList_obj::__mClass;

static ::String FlxUIList_obj_sStaticFields[] = {
	HX_HCSTRING("STACK_HORIZONTAL","\xdb","\x1f","\xfd","\x43"),
	HX_HCSTRING("STACK_VERTICAL","\xad","\x7f","\x2e","\xce"),
	::String(null())
};

void FlxUIList_obj::__register()
{
	hx::Object *dummy = new FlxUIList_obj;
	FlxUIList_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.ui.FlxUIList","\x53","\x9f","\xd0","\x9d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxUIList_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FlxUIList_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxUIList_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxUIList_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxUIList_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxUIList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxUIList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxUIList_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_11_boot)
HXDLIN(  11)		STACK_HORIZONTAL = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_a5e703d0cd5c8e74_12_boot)
HXDLIN(  12)		STACK_VERTICAL = (int)1;
            	}
}

} // end namespace flixel
} // end namespace addons
} // end namespace ui
