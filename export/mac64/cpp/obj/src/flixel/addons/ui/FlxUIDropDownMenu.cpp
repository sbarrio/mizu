// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUI
#include <flixel/addons/ui/FlxUI.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUI9SliceSprite
#include <flixel/addons/ui/FlxUI9SliceSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIButton
#include <flixel/addons/ui/FlxUIButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIDropDownHeader
#include <flixel/addons/ui/FlxUIDropDownHeader.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIDropDownMenu
#include <flixel/addons/ui/FlxUIDropDownMenu.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIDropDownMenuDropDirection
#include <flixel/addons/ui/FlxUIDropDownMenuDropDirection.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIGroup
#include <flixel/addons/ui/FlxUIGroup.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISprite
#include <flixel/addons/ui/FlxUISprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISpriteButton
#include <flixel/addons/ui/FlxUISpriteButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIText
#include <flixel/addons/ui/FlxUIText.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUITypedButton
#include <flixel/addons/ui/FlxUITypedButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_StrNameLabel
#include <flixel/addons/ui/StrNameLabel.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_ICursorPointable
#include <flixel/addons/ui/interfaces/ICursorPointable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIButton
#include <flixel/addons/ui/interfaces/IFlxUIButton.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIClickable
#include <flixel/addons/ui/interfaces/IFlxUIClickable.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIWidget
#include <flixel/addons/ui/interfaces/IFlxUIWidget.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IHasParams
#include <flixel/addons/ui/interfaces/IHasParams.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_ILabeled
#include <flixel/addons/ui/interfaces/ILabeled.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IResizable
#include <flixel/addons/ui/interfaces/IResizable.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton
#include <flixel/ui/FlxTypedButton.h>
#endif
#ifndef INCLUDED_flixel_ui__FlxButton_FlxButtonEvent
#include <flixel/ui/_FlxButton/FlxButtonEvent.h>
#endif
#ifndef INCLUDED_flixel_util_FlxDestroyUtil
#include <flixel/util/FlxDestroyUtil.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Rectangle
#include <openfl/_legacy/geom/Rectangle.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_032c27c33f94f39d_19_new,"flixel.addons.ui.FlxUIDropDownMenu","new",0x9471b5d7,"flixel.addons.ui.FlxUIDropDownMenu.new","flixel/addons/ui/FlxUIDropDownMenu.hx",19,0x238549da)
static const int _hx_array_data_c6267e65_4[] = {
	(int)1,(int)1,(int)14,(int)14,
};
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_22_set_skipButtonUpdate,"flixel.addons.ui.FlxUIDropDownMenu","set_skipButtonUpdate",0xeb78a3e0,"flixel.addons.ui.FlxUIDropDownMenu.set_skipButtonUpdate","flixel/addons/ui/FlxUIDropDownMenu.hx",22,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_34_get_selectedId,"flixel.addons.ui.FlxUIDropDownMenu","get_selectedId",0x60d4af48,"flixel.addons.ui.FlxUIDropDownMenu.get_selectedId","flixel/addons/ui/FlxUIDropDownMenu.hx",34,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_35_set_selectedId,"flixel.addons.ui.FlxUIDropDownMenu","set_selectedId",0x80f497bc,"flixel.addons.ui.FlxUIDropDownMenu.set_selectedId","flixel/addons/ui/FlxUIDropDownMenu.hx",35,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_58_get_selectedLabel,"flixel.addons.ui.FlxUIDropDownMenu","get_selectedLabel",0x701cdca7,"flixel.addons.ui.FlxUIDropDownMenu.get_selectedLabel","flixel/addons/ui/FlxUIDropDownMenu.hx",58,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_59_set_selectedLabel,"flixel.addons.ui.FlxUIDropDownMenu","set_selectedLabel",0x938ab4b3,"flixel.addons.ui.FlxUIDropDownMenu.set_selectedLabel","flixel/addons/ui/FlxUIDropDownMenu.hx",59,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_93_set_params,"flixel.addons.ui.FlxUIDropDownMenu","set_params",0x718bd0ec,"flixel.addons.ui.FlxUIDropDownMenu.set_params","flixel/addons/ui/FlxUIDropDownMenu.hx",93,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_97_set_dropDirection,"flixel.addons.ui.FlxUIDropDownMenu","set_dropDirection",0x6721d72a,"flixel.addons.ui.FlxUIDropDownMenu.set_dropDirection","flixel/addons/ui/FlxUIDropDownMenu.hx",97,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_173_updateButtonPositions,"flixel.addons.ui.FlxUIDropDownMenu","updateButtonPositions",0x0303e686,"flixel.addons.ui.FlxUIDropDownMenu.updateButtonPositions","flixel/addons/ui/FlxUIDropDownMenu.hx",173,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_190_set_visible,"flixel.addons.ui.FlxUIDropDownMenu","set_visible",0xadce940c,"flixel.addons.ui.FlxUIDropDownMenu.set_visible","flixel/addons/ui/FlxUIDropDownMenu.hx",190,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_218_dropsUp,"flixel.addons.ui.FlxUIDropDownMenu","dropsUp",0xb50ec9d6,"flixel.addons.ui.FlxUIDropDownMenu.dropsUp","flixel/addons/ui/FlxUIDropDownMenu.hx",218,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_223_exceedsHeight,"flixel.addons.ui.FlxUIDropDownMenu","exceedsHeight",0x17bb81fd,"flixel.addons.ui.FlxUIDropDownMenu.exceedsHeight","flixel/addons/ui/FlxUIDropDownMenu.hx",223,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_228_getPanelHeight,"flixel.addons.ui.FlxUIDropDownMenu","getPanelHeight",0xdfc394fe,"flixel.addons.ui.FlxUIDropDownMenu.getPanelHeight","flixel/addons/ui/FlxUIDropDownMenu.hx",228,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_236_setData,"flixel.addons.ui.FlxUIDropDownMenu","setData",0xb60b03e3,"flixel.addons.ui.FlxUIDropDownMenu.setData","flixel/addons/ui/FlxUIDropDownMenu.hx",236,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_282_selectSomething,"flixel.addons.ui.FlxUIDropDownMenu","selectSomething",0xd0a071d5,"flixel.addons.ui.FlxUIDropDownMenu.selectSomething","flixel/addons/ui/FlxUIDropDownMenu.hx",282,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_291_makeListButton,"flixel.addons.ui.FlxUIDropDownMenu","makeListButton",0xfb84f067,"flixel.addons.ui.FlxUIDropDownMenu.makeListButton","flixel/addons/ui/FlxUIDropDownMenu.hx",291,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_288_makeListButton,"flixel.addons.ui.FlxUIDropDownMenu","makeListButton",0xfb84f067,"flixel.addons.ui.FlxUIDropDownMenu.makeListButton","flixel/addons/ui/FlxUIDropDownMenu.hx",288,0x238549da)
static const int _hx_array_data_c6267e65_29[] = {
	(int)1,(int)1,(int)3,(int)3,
};
static const int _hx_array_data_c6267e65_30[] = {
	(int)1,(int)1,(int)3,(int)3,
};
static const int _hx_array_data_c6267e65_31[] = {
	(int)1,(int)1,(int)3,(int)3,
};
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_321_changeLabelByIndex,"flixel.addons.ui.FlxUIDropDownMenu","changeLabelByIndex",0xa18ac820,"flixel.addons.ui.FlxUIDropDownMenu.changeLabelByIndex","flixel/addons/ui/FlxUIDropDownMenu.hx",321,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_328_changeLabelById,"flixel.addons.ui.FlxUIDropDownMenu","changeLabelById",0x75719a0d,"flixel.addons.ui.FlxUIDropDownMenu.changeLabelById","flixel/addons/ui/FlxUIDropDownMenu.hx",328,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_335_getBtnByIndex,"flixel.addons.ui.FlxUIDropDownMenu","getBtnByIndex",0x24b02f2c,"flixel.addons.ui.FlxUIDropDownMenu.getBtnByIndex","flixel/addons/ui/FlxUIDropDownMenu.hx",335,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_342_getBtnById,"flixel.addons.ui.FlxUIDropDownMenu","getBtnById",0xae1a9381,"flixel.addons.ui.FlxUIDropDownMenu.getBtnById","flixel/addons/ui/FlxUIDropDownMenu.hx",342,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_353_update,"flixel.addons.ui.FlxUIDropDownMenu","update",0x4f8d24f2,"flixel.addons.ui.FlxUIDropDownMenu.update","flixel/addons/ui/FlxUIDropDownMenu.hx",353,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_367_destroy,"flixel.addons.ui.FlxUIDropDownMenu","destroy",0xd2a999f1,"flixel.addons.ui.FlxUIDropDownMenu.destroy","flixel/addons/ui/FlxUIDropDownMenu.hx",367,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_378_showList,"flixel.addons.ui.FlxUIDropDownMenu","showList",0x6015cb24,"flixel.addons.ui.FlxUIDropDownMenu.showList","flixel/addons/ui/FlxUIDropDownMenu.hx",378,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_391_onDropdown,"flixel.addons.ui.FlxUIDropDownMenu","onDropdown",0x6af20fb9,"flixel.addons.ui.FlxUIDropDownMenu.onDropdown","flixel/addons/ui/FlxUIDropDownMenu.hx",391,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_395_onClickItem,"flixel.addons.ui.FlxUIDropDownMenu","onClickItem",0xc144c8d3,"flixel.addons.ui.FlxUIDropDownMenu.onClickItem","flixel/addons/ui/FlxUIDropDownMenu.hx",395,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_417_makeStrIdLabelArray,"flixel.addons.ui.FlxUIDropDownMenu","makeStrIdLabelArray",0xab19023a,"flixel.addons.ui.FlxUIDropDownMenu.makeStrIdLabelArray","flixel/addons/ui/FlxUIDropDownMenu.hx",417,0x238549da)
HX_LOCAL_STACK_FRAME(_hx_pos_032c27c33f94f39d_103_boot,"flixel.addons.ui.FlxUIDropDownMenu","boot",0x472666db,"flixel.addons.ui.FlxUIDropDownMenu.boot","flixel/addons/ui/FlxUIDropDownMenu.hx",103,0x238549da)
namespace flixel{
namespace addons{
namespace ui{

void FlxUIDropDownMenu_obj::__construct(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::Array< ::Dynamic> DataList, ::Dynamic Callback, ::flixel::addons::ui::FlxUIDropDownHeader Header, ::flixel::addons::ui::FlxUI9SliceSprite DropPanel,::Array< ::Dynamic> ButtonList, ::Dynamic UIControlCallback){
Float X = __o_X.Default(0);
Float Y = __o_Y.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_032c27c33f94f39d_19_new)
HXLINE(  96)		this->dropDirection = ::flixel::addons::ui::FlxUIDropDownMenuDropDirection_obj::Automatic_dyn();
HXLINE(  85)		this->list = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 123)		super::__construct(X,Y);
HXLINE( 124)		this->callback = Callback;
HXLINE( 125)		this->header = Header;
HXLINE( 126)		this->dropPanel = DropPanel;
HXLINE( 128)		if (hx::IsNull( this->header )) {
HXLINE( 129)			this->header =  ::flixel::addons::ui::FlxUIDropDownHeader_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            		}
HXLINE( 131)		if (hx::IsNull( this->dropPanel )) {
HXLINE( 133)			Float rect = this->header->background->get_width();
HXDLIN( 133)			 ::openfl::_legacy::geom::Rectangle rect1 =  ::openfl::_legacy::geom::Rectangle_obj::__alloc( HX_CTX ,(int)0,(int)0,rect,this->header->background->get_height());
HXLINE( 134)			this->dropPanel =  ::flixel::addons::ui::FlxUI9SliceSprite_obj::__alloc( HX_CTX ,(int)0,(int)0,HX_("flixel/flixel-ui/img/box.png",dd,a4,cf,5b),rect1,::Array_obj< int >::fromData( _hx_array_data_c6267e65_4,4),null(),null(),null(),null(),null(),null(),null(),null());
            		}
HXLINE( 137)		if (hx::IsNotNull( DataList )) {
HXLINE( 139)			{
HXLINE( 139)				int _g1 = (int)0;
HXDLIN( 139)				int _g = DataList->length;
HXDLIN( 139)				while((_g1 < _g)){
HXLINE( 139)					_g1 = (_g1 + (int)1);
HXDLIN( 139)					int i = (_g1 - (int)1);
HXLINE( 141)					 ::flixel::addons::ui::StrNameLabel data = DataList->__get(i).StaticCast<  ::flixel::addons::ui::StrNameLabel >();
HXLINE( 142)					::Array< ::Dynamic> _hx_tmp = this->list;
HXDLIN( 142)					_hx_tmp->push(this->makeListButton(i,data->label,data->name));
            				}
            			}
HXLINE( 144)			this->selectSomething(DataList->__get((int)0).StaticCast<  ::flixel::addons::ui::StrNameLabel >()->name,DataList->__get((int)0).StaticCast<  ::flixel::addons::ui::StrNameLabel >()->label);
            		}
            		else {
HXLINE( 146)			if (hx::IsNotNull( ButtonList )) {
HXLINE( 148)				int _g2 = (int)0;
HXDLIN( 148)				while((_g2 < ButtonList->length)){
HXLINE( 148)					 ::flixel::addons::ui::FlxUIButton btn = ButtonList->__get(_g2).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN( 148)					_g2 = (_g2 + (int)1);
HXLINE( 150)					this->list->push(btn);
HXLINE( 151)					Float _hx_tmp1 = this->header->background->get_width();
HXDLIN( 151)					btn->resize(_hx_tmp1,this->header->background->get_height());
HXLINE( 152)					btn->set_x((int)1);
            				}
            			}
            		}
HXLINE( 155)		this->updateButtonPositions();
HXLINE( 157)		 ::flixel::addons::ui::FlxUI9SliceSprite _hx_tmp2 = this->dropPanel;
HXDLIN( 157)		Float _hx_tmp3 = this->header->background->get_width();
HXDLIN( 157)		_hx_tmp2->resize(_hx_tmp3,this->getPanelHeight());
HXLINE( 158)		this->dropPanel->set_visible(false);
HXLINE( 159)		this->add(this->dropPanel);
HXLINE( 161)		{
HXLINE( 161)			int _g3 = (int)0;
HXDLIN( 161)			::Array< ::Dynamic> _g11 = this->list;
HXDLIN( 161)			while((_g3 < _g11->length)){
HXLINE( 161)				 ::flixel::addons::ui::FlxUIButton btn1 = _g11->__get(_g3).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN( 161)				_g3 = (_g3 + (int)1);
HXLINE( 163)				this->add(btn1);
HXLINE( 164)				btn1->set_visible(false);
            			}
            		}
HXLINE( 168)		this->header->button->onUp->callback = this->onDropdown_dyn();
HXLINE( 169)		this->add(this->header);
            	}

Dynamic FlxUIDropDownMenu_obj::__CreateEmpty() { return new FlxUIDropDownMenu_obj; }

void *FlxUIDropDownMenu_obj::_hx_vtable = 0;

Dynamic FlxUIDropDownMenu_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxUIDropDownMenu_obj > _hx_result = new FlxUIDropDownMenu_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7]);
	return _hx_result;
}

bool FlxUIDropDownMenu_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x263b73ac) {
		if (inClassId<=(int)0x25a685e0) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x25a685e0;
			}
		} else {
			return inClassId==(int)0x263b73ac;
		}
	} else {
		if (inClassId<=(int)0x2e105115) {
			return inClassId==(int)0x282173df || inClassId==(int)0x2e105115;
		} else {
			return inClassId==(int)0x31654b6b;
		}
	}
}

static ::flixel::IFlxSprite_obj _hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_IFlxSprite= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::toString,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_x,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_y,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_alpha,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_angle,
	( int (hx::Object::*)(int))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_facing,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_moves,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_immovable,
	( void (hx::Object::*)(Float,Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::reset,
	( void (hx::Object::*)(hx::Null< Float > ,hx::Null< Float > ))&::flixel::addons::ui::FlxUIDropDownMenu_obj::setPosition,
};

static ::flixel::IFlxBasic_obj _hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_IFlxBasic= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::toString,
};

static ::flixel::addons::ui::interfaces::IFlxUIWidget_obj _hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_addons_ui_interfaces_IFlxUIWidget= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_active,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_visible,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_alive,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_exists,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::draw,
	( void (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::update,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::destroy,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::kill,
	( void (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::revive,
	( ::String (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::toString,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_x,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_y,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_alpha,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_angle,
	( int (hx::Object::*)(int))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_facing,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_moves,
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_immovable,
	( void (hx::Object::*)(Float,Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::reset,
	( void (hx::Object::*)(hx::Null< Float > ,hx::Null< Float > ))&::flixel::addons::ui::FlxUIDropDownMenu_obj::setPosition,
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::get_width,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_width,
	( Float (hx::Object::*)())&::flixel::addons::ui::FlxUIDropDownMenu_obj::get_height,
	( Float (hx::Object::*)(Float))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_height,
};

static ::flixel::addons::ui::interfaces::IHasParams_obj _hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_addons_ui_interfaces_IHasParams= {
	( ::cpp::VirtualArray (hx::Object::*)(::cpp::VirtualArray))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_params,
};

static ::flixel::addons::ui::interfaces::IFlxUIClickable_obj _hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_addons_ui_interfaces_IFlxUIClickable= {
	( bool (hx::Object::*)(bool))&::flixel::addons::ui::FlxUIDropDownMenu_obj::set_skipButtonUpdate,
};

void *FlxUIDropDownMenu_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x897c83aa: return &_hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_IFlxSprite;
		case (int)0x284cfea9: return &_hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_IFlxBasic;
		case (int)0x998525de: return &_hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_addons_ui_interfaces_IFlxUIWidget;
		case (int)0x9e5db374: return &_hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_addons_ui_interfaces_IHasParams;
		case (int)0x3e998408: return &_hx_flixel_addons_ui_FlxUIDropDownMenu__hx_flixel_addons_ui_interfaces_IFlxUIClickable;
	}
	return super::_hx_getInterface(inHash);
}

bool FlxUIDropDownMenu_obj::set_skipButtonUpdate(bool b){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_22_set_skipButtonUpdate)
HXLINE(  23)		this->skipButtonUpdate = b;
HXLINE(  24)		this->header->button->set_skipButtonUpdate(b);
HXLINE(  25)		return b;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,set_skipButtonUpdate,return )

::String FlxUIDropDownMenu_obj::get_selectedId(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_34_get_selectedId)
HXDLIN(  34)		return this->_selectedId;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIDropDownMenu_obj,get_selectedId,return )

::String FlxUIDropDownMenu_obj::set_selectedId(::String str){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_35_set_selectedId)
HXLINE(  36)		if ((this->_selectedId == str)) {
HXLINE(  37)			return str;
            		}
HXLINE(  39)		int i = (int)0;
HXLINE(  40)		{
HXLINE(  40)			int _g = (int)0;
HXDLIN(  40)			::Array< ::Dynamic> _g1 = this->list;
HXDLIN(  40)			while((_g < _g1->length)){
HXLINE(  40)				 ::flixel::addons::ui::FlxUIButton btn = _g1->__get(_g).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN(  40)				_g = (_g + (int)1);
HXLINE(  41)				bool _hx_tmp;
HXDLIN(  41)				if (hx::IsNotNull( btn )) {
HXLINE(  41)					_hx_tmp = (btn->name == str);
            				}
            				else {
HXLINE(  41)					_hx_tmp = false;
            				}
HXDLIN(  41)				if (_hx_tmp) {
HXLINE(  42)					 ::flixel::addons::ui::FlxUIButton item = this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXLINE(  43)					this->_selectedId = str;
HXLINE(  44)					if (hx::IsNotNull( ( ( ::flixel::addons::ui::FlxUIText)(item->label) ) )) {
HXLINE(  45)						this->_selectedLabel = ( ( ::flixel::text::FlxText)(item->label) )->text;
HXLINE(  46)						this->header->text->set_text(( ( ::flixel::text::FlxText)(item->label) )->text);
            					}
            					else {
HXLINE(  48)						this->_selectedLabel = HX_("",00,00,00,00);
HXLINE(  49)						this->header->text->set_text(HX_("",00,00,00,00));
            					}
HXLINE(  51)					return str;
            				}
HXLINE(  53)				i = (i + (int)1);
            			}
            		}
HXLINE(  55)		return str;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,set_selectedId,return )

::String FlxUIDropDownMenu_obj::get_selectedLabel(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_58_get_selectedLabel)
HXDLIN(  58)		return this->_selectedLabel;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIDropDownMenu_obj,get_selectedLabel,return )

::String FlxUIDropDownMenu_obj::set_selectedLabel(::String str){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_59_set_selectedLabel)
HXLINE(  60)		if ((this->_selectedLabel == str)) {
HXLINE(  61)			return str;
            		}
HXLINE(  63)		int i = (int)0;
HXLINE(  64)		{
HXLINE(  64)			int _g = (int)0;
HXDLIN(  64)			::Array< ::Dynamic> _g1 = this->list;
HXDLIN(  64)			while((_g < _g1->length)){
HXLINE(  64)				 ::flixel::addons::ui::FlxUIButton btn = _g1->__get(_g).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN(  64)				_g = (_g + (int)1);
HXLINE(  65)				if ((( ( ::flixel::text::FlxText)(btn->label) )->text == str)) {
HXLINE(  66)					 ::flixel::addons::ui::FlxUIButton item = this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXLINE(  67)					this->_selectedId = item->name;
HXLINE(  68)					this->_selectedLabel = str;
HXLINE(  69)					this->header->text->set_text(str);
HXLINE(  70)					return str;
            				}
HXLINE(  72)				i = (i + (int)1);
            			}
            		}
HXLINE(  74)		return str;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,set_selectedLabel,return )

::cpp::VirtualArray FlxUIDropDownMenu_obj::set_params(::cpp::VirtualArray p){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_93_set_params)
HXDLIN(  93)		return (this->params = p);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,set_params,return )

 ::flixel::addons::ui::FlxUIDropDownMenuDropDirection FlxUIDropDownMenu_obj::set_dropDirection( ::flixel::addons::ui::FlxUIDropDownMenuDropDirection dropDirection){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_97_set_dropDirection)
HXLINE(  98)		this->dropDirection = dropDirection;
HXLINE(  99)		this->updateButtonPositions();
HXLINE( 100)		return dropDirection;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,set_dropDirection,return )

void FlxUIDropDownMenu_obj::updateButtonPositions(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_173_updateButtonPositions)
HXLINE( 174)		Float buttonHeight = this->header->background->get_height();
HXLINE( 175)		this->dropPanel->set_y(this->header->background->y);
HXLINE( 176)		if (this->dropsUp()) {
HXLINE( 177)			 ::flixel::addons::ui::FlxUI9SliceSprite _g = this->dropPanel;
HXDLIN( 177)			Float _g1 = _g->y;
HXDLIN( 177)			_g->set_y((_g1 - this->getPanelHeight()));
            		}
            		else {
HXLINE( 179)			 ::flixel::addons::ui::FlxUI9SliceSprite _g2 = this->dropPanel;
HXDLIN( 179)			_g2->set_y((_g2->y + buttonHeight));
            		}
HXLINE( 181)		Float offset = this->dropPanel->y;
HXLINE( 182)		{
HXLINE( 182)			int _g3 = (int)0;
HXDLIN( 182)			::Array< ::Dynamic> _g11 = this->list;
HXDLIN( 182)			while((_g3 < _g11->length)){
HXLINE( 182)				 ::flixel::addons::ui::FlxUIButton button = _g11->__get(_g3).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN( 182)				_g3 = (_g3 + (int)1);
HXLINE( 184)				button->set_y(offset);
HXLINE( 185)				offset = (offset + buttonHeight);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIDropDownMenu_obj,updateButtonPositions,(void))

bool FlxUIDropDownMenu_obj::set_visible(bool Value){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_190_set_visible)
HXLINE( 191)		bool vDropPanel = this->dropPanel->visible;
HXLINE( 192)		::Array< bool > vButtons = ::Array_obj< bool >::__new(0);
HXLINE( 193)		{
HXLINE( 193)			int _g1 = (int)0;
HXDLIN( 193)			int _g = this->list->length;
HXDLIN( 193)			while((_g1 < _g)){
HXLINE( 193)				_g1 = (_g1 + (int)1);
HXDLIN( 193)				int i = (_g1 - (int)1);
HXLINE( 195)				if (hx::IsNotNull( this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >() )) {
HXLINE( 197)					vButtons->push(this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >()->visible);
            				}
            				else {
HXLINE( 201)					vButtons->push(false);
            				}
            			}
            		}
HXLINE( 204)		this->super::set_visible(Value);
HXLINE( 205)		this->dropPanel->set_visible(vDropPanel);
HXLINE( 206)		{
HXLINE( 206)			int _g11 = (int)0;
HXDLIN( 206)			int _g2 = this->list->length;
HXDLIN( 206)			while((_g11 < _g2)){
HXLINE( 206)				_g11 = (_g11 + (int)1);
HXDLIN( 206)				int i1 = (_g11 - (int)1);
HXLINE( 208)				if (hx::IsNotNull( this->list->__get(i1).StaticCast<  ::flixel::addons::ui::FlxUIButton >() )) {
HXLINE( 210)					 ::flixel::addons::ui::FlxUIButton _hx_tmp = this->list->__get(i1).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN( 210)					_hx_tmp->set_visible(vButtons->__get(i1));
            				}
            			}
            		}
HXLINE( 213)		return Value;
            	}


bool FlxUIDropDownMenu_obj::dropsUp(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_218_dropsUp)
HXDLIN( 218)		if (hx::IsNotEq( this->dropDirection,::flixel::addons::ui::FlxUIDropDownMenuDropDirection_obj::Up_dyn() )) {
HXDLIN( 218)			if (hx::IsEq( this->dropDirection,::flixel::addons::ui::FlxUIDropDownMenuDropDirection_obj::Automatic_dyn() )) {
HXDLIN( 218)				return this->exceedsHeight();
            			}
            			else {
HXDLIN( 218)				return false;
            			}
            		}
            		else {
HXDLIN( 218)			return true;
            		}
HXDLIN( 218)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIDropDownMenu_obj,dropsUp,return )

bool FlxUIDropDownMenu_obj::exceedsHeight(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_223_exceedsHeight)
HXDLIN( 223)		Float _hx_tmp = this->y;
HXDLIN( 223)		Float _hx_tmp1 = (_hx_tmp + this->getPanelHeight());
HXDLIN( 223)		return (_hx_tmp1 > ::flixel::FlxG_obj::height);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIDropDownMenu_obj,exceedsHeight,return )

Float FlxUIDropDownMenu_obj::getPanelHeight(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_228_getPanelHeight)
HXDLIN( 228)		int _hx_tmp = this->list->length;
HXDLIN( 228)		return (_hx_tmp * this->header->background->get_height());
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIDropDownMenu_obj,getPanelHeight,return )

void FlxUIDropDownMenu_obj::setData(::Array< ::Dynamic> DataList){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_236_setData)
HXLINE( 237)		int i = (int)0;
HXLINE( 239)		if (hx::IsNotNull( DataList )) {
HXLINE( 240)			{
HXLINE( 240)				int _g = (int)0;
HXDLIN( 240)				while((_g < DataList->length)){
HXLINE( 240)					 ::flixel::addons::ui::StrNameLabel data = DataList->__get(_g).StaticCast<  ::flixel::addons::ui::StrNameLabel >();
HXDLIN( 240)					_g = (_g + (int)1);
HXLINE( 241)					bool recycled = false;
HXLINE( 242)					if (hx::IsNotNull( this->list )) {
HXLINE( 243)						if ((i <= (this->list->length - (int)1))) {
HXLINE( 244)							 ::flixel::addons::ui::FlxUIButton btn = this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXLINE( 245)							if (hx::IsNotNull( btn )) {
HXLINE( 246)								( ( ::flixel::text::FlxText)(btn->label) )->set_text(data->label);
HXLINE( 247)								this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >()->name = data->name;
HXLINE( 248)								recycled = true;
            							}
            						}
            					}
            					else {
HXLINE( 252)						this->list = ::Array_obj< ::Dynamic>::__new(0);
            					}
HXLINE( 254)					if (!(recycled)) {
HXLINE( 255)						 ::flixel::addons::ui::FlxUIButton t = this->makeListButton(i,data->label,data->name);
HXLINE( 256)						this->list->push(t);
HXLINE( 257)						this->add(t);
HXLINE( 258)						t->set_visible(false);
            					}
HXLINE( 260)					i = (i + (int)1);
            				}
            			}
HXLINE( 264)			if ((this->list->length > DataList->length)) {
HXLINE( 265)				int _g1 = DataList->length;
HXDLIN( 265)				int _g2 = this->list->length;
HXDLIN( 265)				while((_g1 < _g2)){
HXLINE( 265)					_g1 = (_g1 + (int)1);
HXDLIN( 265)					int j = (_g1 - (int)1);
HXLINE( 266)					 ::flixel::addons::ui::FlxUIButton b = this->list->pop().StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXLINE( 267)					b->set_visible(false);
HXLINE( 268)					b->set_active(false);
HXLINE( 269)					this->remove(b,true);
HXLINE( 270)					b->destroy();
HXLINE( 271)					b = null();
            				}
            			}
HXLINE( 275)			this->selectSomething(DataList->__get((int)0).StaticCast<  ::flixel::addons::ui::StrNameLabel >()->name,DataList->__get((int)0).StaticCast<  ::flixel::addons::ui::StrNameLabel >()->label);
            		}
HXLINE( 278)		 ::flixel::addons::ui::FlxUI9SliceSprite _hx_tmp = this->dropPanel;
HXDLIN( 278)		Float _hx_tmp1 = this->header->background->get_width();
HXDLIN( 278)		_hx_tmp->resize(_hx_tmp1,this->getPanelHeight());
HXLINE( 279)		this->updateButtonPositions();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,setData,(void))

void FlxUIDropDownMenu_obj::selectSomething(::String name,::String label){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_282_selectSomething)
HXLINE( 283)		this->header->text->set_text(label);
HXLINE( 284)		this->set_selectedId(name);
HXLINE( 285)		this->set_selectedLabel(label);
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxUIDropDownMenu_obj,selectSomething,(void))

 ::flixel::addons::ui::FlxUIButton FlxUIDropDownMenu_obj::makeListButton(int i,::String Label,::String Name){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f,int,i1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_032c27c33f94f39d_291_makeListButton)
HXLINE( 291)			f(i1);
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_032c27c33f94f39d_288_makeListButton)
HXLINE( 289)		 ::flixel::addons::ui::FlxUIButton t =  ::flixel::addons::ui::FlxUIButton_obj::__alloc( HX_CTX ,(int)0,(int)0,Label,null(),null(),null(),null());
HXLINE( 290)		t->broadcastToFlxUI = false;
HXLINE( 291)		 ::Dynamic f = this->onClickItem_dyn();
HXDLIN( 291)		int i1 = i;
HXDLIN( 291)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_0(f,i1));
HXDLIN( 291)		t->onUp->callback = _hx_tmp;
HXLINE( 293)		t->name = Name;
HXLINE( 295)		int _hx_tmp1 = ::Std_obj::_hx_int(this->header->background->get_width());
HXDLIN( 295)		t->loadGraphicSlice9(::cpp::VirtualArray_obj::__new(3)->init(0,HX_("flixel/flixel-ui/img/invis.png",ad,69,e0,09))->init(1,HX_("flixel/flixel-ui/img/hilight.png",87,4d,54,73))->init(2,HX_("flixel/flixel-ui/img/hilight.png",87,4d,54,73)),_hx_tmp1,::Std_obj::_hx_int(this->header->background->get_height()),::Array_obj< ::Dynamic>::__new(3)->init(0,::Array_obj< int >::fromData( _hx_array_data_c6267e65_29,4))->init(1,::Array_obj< int >::fromData( _hx_array_data_c6267e65_30,4))->init(2,::Array_obj< int >::fromData( _hx_array_data_c6267e65_31,4)),(int)0,null(),null(),null(),null(),null());
HXLINE( 297)		{
HXLINE( 297)			 ::flixel::math::FlxPoint _g = t->labelOffsets->__get((int)2).StaticCast<  ::flixel::math::FlxPoint >();
HXDLIN( 297)			_g->set_y((_g->y - (int)1));
            		}
HXLINE( 299)		t->up_color = (int)-16777216;
HXLINE( 300)		t->over_color = (int)-1;
HXLINE( 301)		t->down_color = (int)-1;
HXLINE( 303)		Float _hx_tmp2 = (this->header->background->get_width() - (int)2);
HXDLIN( 303)		t->resize(_hx_tmp2,(this->header->background->get_height() - (int)1));
HXLINE( 305)		( ( ::flixel::text::FlxText)(t->label) )->set_alignment(HX_("left",07,08,b0,47));
HXLINE( 306)		t->autoCenterLabel();
HXLINE( 307)		t->set_x((int)1);
HXLINE( 309)		{
HXLINE( 309)			int _g1 = (int)0;
HXDLIN( 309)			::Array< ::Dynamic> _g11 = t->labelOffsets;
HXDLIN( 309)			while((_g1 < _g11->length)){
HXLINE( 309)				 ::flixel::math::FlxPoint offset = _g11->__get(_g1).StaticCast<  ::flixel::math::FlxPoint >();
HXDLIN( 309)				_g1 = (_g1 + (int)1);
HXLINE( 311)				{
HXLINE( 311)					 ::flixel::math::FlxPoint _g2 = offset;
HXDLIN( 311)					_g2->set_x((_g2->x + (int)2));
            				}
            			}
            		}
HXLINE( 314)		return t;
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxUIDropDownMenu_obj,makeListButton,return )

void FlxUIDropDownMenu_obj::changeLabelByIndex(int i,::String NewLabel){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_321_changeLabelByIndex)
HXLINE( 322)		 ::flixel::addons::ui::FlxUIButton btn = this->getBtnByIndex(i);
HXLINE( 323)		bool _hx_tmp;
HXDLIN( 323)		if (hx::IsNotNull( btn )) {
HXLINE( 323)			_hx_tmp = hx::IsNotNull( ( ( ::flixel::addons::ui::FlxUIText)(btn->label) ) );
            		}
            		else {
HXLINE( 323)			_hx_tmp = false;
            		}
HXDLIN( 323)		if (_hx_tmp) {
HXLINE( 324)			( ( ::flixel::text::FlxText)(btn->label) )->set_text(NewLabel);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxUIDropDownMenu_obj,changeLabelByIndex,(void))

void FlxUIDropDownMenu_obj::changeLabelById(::String name,::String NewLabel){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_328_changeLabelById)
HXLINE( 329)		 ::flixel::addons::ui::FlxUIButton btn = this->getBtnById(name);
HXLINE( 330)		bool _hx_tmp;
HXDLIN( 330)		if (hx::IsNotNull( btn )) {
HXLINE( 330)			_hx_tmp = hx::IsNotNull( ( ( ::flixel::addons::ui::FlxUIText)(btn->label) ) );
            		}
            		else {
HXLINE( 330)			_hx_tmp = false;
            		}
HXDLIN( 330)		if (_hx_tmp) {
HXLINE( 331)			( ( ::flixel::text::FlxText)(btn->label) )->set_text(NewLabel);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxUIDropDownMenu_obj,changeLabelById,(void))

 ::flixel::addons::ui::FlxUIButton FlxUIDropDownMenu_obj::getBtnByIndex(int i){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_335_getBtnByIndex)
HXLINE( 336)		bool _hx_tmp;
HXDLIN( 336)		if ((i >= (int)0)) {
HXLINE( 336)			_hx_tmp = (i < this->list->length);
            		}
            		else {
HXLINE( 336)			_hx_tmp = false;
            		}
HXDLIN( 336)		if (_hx_tmp) {
HXLINE( 337)			return this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
            		}
HXLINE( 339)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,getBtnByIndex,return )

 ::flixel::addons::ui::FlxUIButton FlxUIDropDownMenu_obj::getBtnById(::String name){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_342_getBtnById)
HXLINE( 343)		{
HXLINE( 343)			int _g = (int)0;
HXDLIN( 343)			::Array< ::Dynamic> _g1 = this->list;
HXDLIN( 343)			while((_g < _g1->length)){
HXLINE( 343)				 ::flixel::addons::ui::FlxUIButton btn = _g1->__get(_g).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN( 343)				_g = (_g + (int)1);
HXLINE( 344)				if ((btn->name == name)) {
HXLINE( 345)					return btn;
            				}
            			}
            		}
HXLINE( 348)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,getBtnById,return )

void FlxUIDropDownMenu_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_353_update)
HXDLIN( 353)		this->super::update(elapsed);
            	}


void FlxUIDropDownMenu_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_367_destroy)
HXLINE( 368)		this->super::destroy();
HXLINE( 370)		this->dropPanel = ( ( ::flixel::addons::ui::FlxUI9SliceSprite)(::flixel::util::FlxDestroyUtil_obj::destroy(this->dropPanel)) );
HXLINE( 372)		this->list = ::flixel::util::FlxDestroyUtil_obj::destroyArray(this->list);
HXLINE( 374)		this->callback = null();
            	}


void FlxUIDropDownMenu_obj::showList(bool b){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_378_showList)
HXLINE( 379)		{
HXLINE( 379)			int _g = (int)0;
HXDLIN( 379)			::Array< ::Dynamic> _g1 = this->list;
HXDLIN( 379)			while((_g < _g1->length)){
HXLINE( 379)				 ::flixel::addons::ui::FlxUIButton button = _g1->__get(_g).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXDLIN( 379)				_g = (_g + (int)1);
HXLINE( 380)				button->set_visible(b);
HXLINE( 381)				button->set_active(b);
            			}
            		}
HXLINE( 384)		this->dropPanel->set_visible(b);
HXLINE( 386)		::flixel::addons::ui::FlxUI_obj::forceFocus(b,hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,showList,(void))

void FlxUIDropDownMenu_obj::onDropdown(){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_391_onDropdown)
HXDLIN( 391)		if (this->dropPanel->visible) {
HXDLIN( 391)			this->showList(false);
            		}
            		else {
HXDLIN( 391)			this->showList(true);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxUIDropDownMenu_obj,onDropdown,(void))

void FlxUIDropDownMenu_obj::onClickItem(int i){
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_395_onClickItem)
HXLINE( 396)		 ::flixel::addons::ui::FlxUIButton item = this->list->__get(i).StaticCast<  ::flixel::addons::ui::FlxUIButton >();
HXLINE( 397)		this->selectSomething(item->name,( ( ::flixel::text::FlxText)(item->label) )->text);
HXLINE( 398)		this->showList(false);
HXLINE( 400)		if (hx::IsNotNull( this->callback )) {
HXLINE( 401)			this->callback(item->name);
            		}
HXLINE( 404)		if (this->broadcastToFlxUI) {
HXLINE( 405)			::flixel::addons::ui::FlxUI_obj::event(HX_("click_dropdown",28,26,a9,27),hx::ObjectPtr<OBJ_>(this),item->name,this->params);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxUIDropDownMenu_obj,onClickItem,(void))

::String FlxUIDropDownMenu_obj::CLICK_EVENT;

::Array< ::Dynamic> FlxUIDropDownMenu_obj::makeStrIdLabelArray(::Array< ::String > StringArray,hx::Null< bool >  __o_UseIndexID){
bool UseIndexID = __o_UseIndexID.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_032c27c33f94f39d_417_makeStrIdLabelArray)
HXLINE( 418)		::Array< ::Dynamic> strIdArray = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 419)		{
HXLINE( 419)			int _g1 = (int)0;
HXDLIN( 419)			int _g = StringArray->length;
HXDLIN( 419)			while((_g1 < _g)){
HXLINE( 419)				_g1 = (_g1 + (int)1);
HXDLIN( 419)				int i = (_g1 - (int)1);
HXLINE( 421)				::String ID = StringArray->__get(i);
HXLINE( 422)				if (UseIndexID) {
HXLINE( 424)					ID = ::Std_obj::string(i);
            				}
HXLINE( 426)				strIdArray[i] =  ::flixel::addons::ui::StrNameLabel_obj::__alloc( HX_CTX ,ID,StringArray->__get(i));
            			}
            		}
HXLINE( 428)		return strIdArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FlxUIDropDownMenu_obj,makeStrIdLabelArray,return )


hx::ObjectPtr< FlxUIDropDownMenu_obj > FlxUIDropDownMenu_obj::__new(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::Array< ::Dynamic> DataList, ::Dynamic Callback, ::flixel::addons::ui::FlxUIDropDownHeader Header, ::flixel::addons::ui::FlxUI9SliceSprite DropPanel,::Array< ::Dynamic> ButtonList, ::Dynamic UIControlCallback) {
	hx::ObjectPtr< FlxUIDropDownMenu_obj > __this = new FlxUIDropDownMenu_obj();
	__this->__construct(__o_X,__o_Y,DataList,Callback,Header,DropPanel,ButtonList,UIControlCallback);
	return __this;
}

hx::ObjectPtr< FlxUIDropDownMenu_obj > FlxUIDropDownMenu_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,::Array< ::Dynamic> DataList, ::Dynamic Callback, ::flixel::addons::ui::FlxUIDropDownHeader Header, ::flixel::addons::ui::FlxUI9SliceSprite DropPanel,::Array< ::Dynamic> ButtonList, ::Dynamic UIControlCallback) {
	FlxUIDropDownMenu_obj *__this = (FlxUIDropDownMenu_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxUIDropDownMenu_obj), true, "flixel.addons.ui.FlxUIDropDownMenu"));
	*(void **)__this = FlxUIDropDownMenu_obj::_hx_vtable;
	__this->__construct(__o_X,__o_Y,DataList,Callback,Header,DropPanel,ButtonList,UIControlCallback);
	return __this;
}

FlxUIDropDownMenu_obj::FlxUIDropDownMenu_obj()
{
}

void FlxUIDropDownMenu_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxUIDropDownMenu);
	HX_MARK_MEMBER_NAME(skipButtonUpdate,"skipButtonUpdate");
	HX_MARK_MEMBER_NAME(_selectedId,"_selectedId");
	HX_MARK_MEMBER_NAME(_selectedLabel,"_selectedLabel");
	HX_MARK_MEMBER_NAME(header,"header");
	HX_MARK_MEMBER_NAME(list,"list");
	HX_MARK_MEMBER_NAME(dropPanel,"dropPanel");
	HX_MARK_MEMBER_NAME(params,"params");
	HX_MARK_MEMBER_NAME(dropDirection,"dropDirection");
	HX_MARK_MEMBER_NAME(callback,"callback");
	 ::flixel::addons::ui::FlxUIGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FlxUIDropDownMenu_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(skipButtonUpdate,"skipButtonUpdate");
	HX_VISIT_MEMBER_NAME(_selectedId,"_selectedId");
	HX_VISIT_MEMBER_NAME(_selectedLabel,"_selectedLabel");
	HX_VISIT_MEMBER_NAME(header,"header");
	HX_VISIT_MEMBER_NAME(list,"list");
	HX_VISIT_MEMBER_NAME(dropPanel,"dropPanel");
	HX_VISIT_MEMBER_NAME(params,"params");
	HX_VISIT_MEMBER_NAME(dropDirection,"dropDirection");
	HX_VISIT_MEMBER_NAME(callback,"callback");
	 ::flixel::addons::ui::FlxUIGroup_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FlxUIDropDownMenu_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"list") ) { return hx::Val( list ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"header") ) { return hx::Val( header ); }
		if (HX_FIELD_EQ(inName,"params") ) { return hx::Val( params ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"dropsUp") ) { return hx::Val( dropsUp_dyn() ); }
		if (HX_FIELD_EQ(inName,"setData") ) { return hx::Val( setData_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { return hx::Val( callback ); }
		if (HX_FIELD_EQ(inName,"showList") ) { return hx::Val( showList_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"dropPanel") ) { return hx::Val( dropPanel ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"selectedId") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_selectedId() ); }
		if (HX_FIELD_EQ(inName,"set_params") ) { return hx::Val( set_params_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBtnById") ) { return hx::Val( getBtnById_dyn() ); }
		if (HX_FIELD_EQ(inName,"onDropdown") ) { return hx::Val( onDropdown_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_selectedId") ) { return hx::Val( _selectedId ); }
		if (HX_FIELD_EQ(inName,"set_visible") ) { return hx::Val( set_visible_dyn() ); }
		if (HX_FIELD_EQ(inName,"onClickItem") ) { return hx::Val( onClickItem_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectedLabel") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_selectedLabel() ); }
		if (HX_FIELD_EQ(inName,"dropDirection") ) { return hx::Val( dropDirection ); }
		if (HX_FIELD_EQ(inName,"exceedsHeight") ) { return hx::Val( exceedsHeight_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBtnByIndex") ) { return hx::Val( getBtnByIndex_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_selectedLabel") ) { return hx::Val( _selectedLabel ); }
		if (HX_FIELD_EQ(inName,"get_selectedId") ) { return hx::Val( get_selectedId_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedId") ) { return hx::Val( set_selectedId_dyn() ); }
		if (HX_FIELD_EQ(inName,"getPanelHeight") ) { return hx::Val( getPanelHeight_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeListButton") ) { return hx::Val( makeListButton_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"selectSomething") ) { return hx::Val( selectSomething_dyn() ); }
		if (HX_FIELD_EQ(inName,"changeLabelById") ) { return hx::Val( changeLabelById_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"skipButtonUpdate") ) { return hx::Val( skipButtonUpdate ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_selectedLabel") ) { return hx::Val( get_selectedLabel_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedLabel") ) { return hx::Val( set_selectedLabel_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_dropDirection") ) { return hx::Val( set_dropDirection_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"changeLabelByIndex") ) { return hx::Val( changeLabelByIndex_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"set_skipButtonUpdate") ) { return hx::Val( set_skipButtonUpdate_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"updateButtonPositions") ) { return hx::Val( updateButtonPositions_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool FlxUIDropDownMenu_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 19:
		if (HX_FIELD_EQ(inName,"makeStrIdLabelArray") ) { outValue = makeStrIdLabelArray_dyn(); return true; }
	}
	return false;
}

hx::Val FlxUIDropDownMenu_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"list") ) { list=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"header") ) { header=inValue.Cast<  ::flixel::addons::ui::FlxUIDropDownHeader >(); return inValue; }
		if (HX_FIELD_EQ(inName,"params") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_params(inValue.Cast< ::cpp::VirtualArray >()) );params=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { callback=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"dropPanel") ) { dropPanel=inValue.Cast<  ::flixel::addons::ui::FlxUI9SliceSprite >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"selectedId") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_selectedId(inValue.Cast< ::String >()) ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_selectedId") ) { _selectedId=inValue.Cast< ::String >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectedLabel") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_selectedLabel(inValue.Cast< ::String >()) ); }
		if (HX_FIELD_EQ(inName,"dropDirection") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_dropDirection(inValue.Cast<  ::flixel::addons::ui::FlxUIDropDownMenuDropDirection >()) );dropDirection=inValue.Cast<  ::flixel::addons::ui::FlxUIDropDownMenuDropDirection >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_selectedLabel") ) { _selectedLabel=inValue.Cast< ::String >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"skipButtonUpdate") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_skipButtonUpdate(inValue.Cast< bool >()) );skipButtonUpdate=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxUIDropDownMenu_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("skipButtonUpdate","\xba","\x02","\xf2","\x13"));
	outFields->push(HX_HCSTRING("selectedId","\x16","\xf7","\xd0","\xc6"));
	outFields->push(HX_HCSTRING("selectedLabel","\x99","\xe9","\xf0","\x65"));
	outFields->push(HX_HCSTRING("_selectedId","\x35","\xc4","\x5a","\x99"));
	outFields->push(HX_HCSTRING("_selectedLabel","\xda","\xd9","\x42","\xa4"));
	outFields->push(HX_HCSTRING("header","\x8d","\x09","\x00","\xfd"));
	outFields->push(HX_HCSTRING("list","\x5e","\x1c","\xb3","\x47"));
	outFields->push(HX_HCSTRING("dropPanel","\x55","\xa8","\x0a","\xff"));
	outFields->push(HX_HCSTRING("params","\x46","\xfb","\x7a","\xed"));
	outFields->push(HX_HCSTRING("dropDirection","\x10","\x0c","\x88","\x39"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxUIDropDownMenu_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(FlxUIDropDownMenu_obj,skipButtonUpdate),HX_HCSTRING("skipButtonUpdate","\xba","\x02","\xf2","\x13")},
	{hx::fsString,(int)offsetof(FlxUIDropDownMenu_obj,_selectedId),HX_HCSTRING("_selectedId","\x35","\xc4","\x5a","\x99")},
	{hx::fsString,(int)offsetof(FlxUIDropDownMenu_obj,_selectedLabel),HX_HCSTRING("_selectedLabel","\xda","\xd9","\x42","\xa4")},
	{hx::fsObject /*::flixel::addons::ui::FlxUIDropDownHeader*/ ,(int)offsetof(FlxUIDropDownMenu_obj,header),HX_HCSTRING("header","\x8d","\x09","\x00","\xfd")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(FlxUIDropDownMenu_obj,list),HX_HCSTRING("list","\x5e","\x1c","\xb3","\x47")},
	{hx::fsObject /*::flixel::addons::ui::FlxUI9SliceSprite*/ ,(int)offsetof(FlxUIDropDownMenu_obj,dropPanel),HX_HCSTRING("dropPanel","\x55","\xa8","\x0a","\xff")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(FlxUIDropDownMenu_obj,params),HX_HCSTRING("params","\x46","\xfb","\x7a","\xed")},
	{hx::fsObject /*::flixel::addons::ui::FlxUIDropDownMenuDropDirection*/ ,(int)offsetof(FlxUIDropDownMenu_obj,dropDirection),HX_HCSTRING("dropDirection","\x10","\x0c","\x88","\x39")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxUIDropDownMenu_obj,callback),HX_HCSTRING("callback","\xc5","\x99","\x06","\x7f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo FlxUIDropDownMenu_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &FlxUIDropDownMenu_obj::CLICK_EVENT,HX_HCSTRING("CLICK_EVENT","\x63","\x89","\xc0","\x0d")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String FlxUIDropDownMenu_obj_sMemberFields[] = {
	HX_HCSTRING("skipButtonUpdate","\xba","\x02","\xf2","\x13"),
	HX_HCSTRING("set_skipButtonUpdate","\x37","\x1f","\x14","\xff"),
	HX_HCSTRING("_selectedId","\x35","\xc4","\x5a","\x99"),
	HX_HCSTRING("_selectedLabel","\xda","\xd9","\x42","\xa4"),
	HX_HCSTRING("get_selectedId","\x5f","\x7f","\xc6","\x3c"),
	HX_HCSTRING("set_selectedId","\xd3","\x67","\xe6","\x5c"),
	HX_HCSTRING("get_selectedLabel","\xf0","\xf4","\x60","\x6c"),
	HX_HCSTRING("set_selectedLabel","\xfc","\xcc","\xce","\x8f"),
	HX_HCSTRING("header","\x8d","\x09","\x00","\xfd"),
	HX_HCSTRING("list","\x5e","\x1c","\xb3","\x47"),
	HX_HCSTRING("dropPanel","\x55","\xa8","\x0a","\xff"),
	HX_HCSTRING("params","\x46","\xfb","\x7a","\xed"),
	HX_HCSTRING("set_params","\x83","\x09","\x80","\xe1"),
	HX_HCSTRING("dropDirection","\x10","\x0c","\x88","\x39"),
	HX_HCSTRING("set_dropDirection","\x73","\xef","\x65","\x63"),
	HX_HCSTRING("callback","\xc5","\x99","\x06","\x7f"),
	HX_HCSTRING("updateButtonPositions","\x4f","\x57","\x74","\x17"),
	HX_HCSTRING("set_visible","\x95","\xdf","\x8b","\x33"),
	HX_HCSTRING("dropsUp","\xdf","\x5c","\xeb","\x06"),
	HX_HCSTRING("exceedsHeight","\xc6","\x81","\x09","\x80"),
	HX_HCSTRING("getPanelHeight","\x15","\x65","\xb5","\xbb"),
	HX_HCSTRING("setData","\xec","\x96","\xe7","\x07"),
	HX_HCSTRING("selectSomething","\xde","\xb5","\x44","\x68"),
	HX_HCSTRING("makeListButton","\x7e","\xc0","\x76","\xd7"),
	HX_HCSTRING("changeLabelByIndex","\xb7","\xef","\xdb","\x60"),
	HX_HCSTRING("changeLabelById","\x16","\xde","\x15","\x0d"),
	HX_HCSTRING("getBtnByIndex","\xf5","\x2e","\xfe","\x8c"),
	HX_HCSTRING("getBtnById","\x18","\xcc","\x0e","\x1e"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("showList","\xfb","\xdf","\x39","\xaf"),
	HX_HCSTRING("onDropdown","\x50","\x48","\xe6","\xda"),
	HX_HCSTRING("onClickItem","\x5c","\x14","\x02","\x47"),
	::String(null()) };

static void FlxUIDropDownMenu_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxUIDropDownMenu_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(FlxUIDropDownMenu_obj::CLICK_EVENT,"CLICK_EVENT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxUIDropDownMenu_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxUIDropDownMenu_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(FlxUIDropDownMenu_obj::CLICK_EVENT,"CLICK_EVENT");
};

#endif

hx::Class FlxUIDropDownMenu_obj::__mClass;

static ::String FlxUIDropDownMenu_obj_sStaticFields[] = {
	HX_HCSTRING("CLICK_EVENT","\x63","\x89","\xc0","\x0d"),
	HX_HCSTRING("makeStrIdLabelArray","\xc3","\x7e","\xca","\x52"),
	::String(null())
};

void FlxUIDropDownMenu_obj::__register()
{
	hx::Object *dummy = new FlxUIDropDownMenu_obj;
	FlxUIDropDownMenu_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.addons.ui.FlxUIDropDownMenu","\x65","\x7e","\x26","\xc6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxUIDropDownMenu_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxUIDropDownMenu_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FlxUIDropDownMenu_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxUIDropDownMenu_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxUIDropDownMenu_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxUIDropDownMenu_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxUIDropDownMenu_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxUIDropDownMenu_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxUIDropDownMenu_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_032c27c33f94f39d_103_boot)
HXDLIN( 103)		CLICK_EVENT = HX_("click_dropdown",28,26,a9,27);
            	}
}

} // end namespace flixel
} // end namespace addons
} // end namespace ui
